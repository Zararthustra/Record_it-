{"version":3,"sources":["../node_modules/@ion-phaser/core/dist/esm lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","components/Navigation.js","pages/Home.js","pages/Login.js","pages/Logout.js","pages/Signup.js","pages/Records.js","pages/Games.js","phaser/assets/images/pipebot.png","phaser/assets/images/pipetop.png","phaser/assets/images/holbie.png","phaser/flappyCode.js","phaser/snakeCode.js","components/Game.js","phaser/flappyStart.js","pages/FlappyHolbie.js","phaser/assets/images/food.png","phaser/assets/images/body.png","phaser/assets/images/head.png","phaser/assets/images/grass.png","phaser/snakeStart.js","pages/Snake.js","components/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Navigation","className","href","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","Home","props","state","globalPerso","globals","topFlappyRecords","topSnakeRecords","flappyRecords","snakeRecords","showMe","username","localStorage","getItem","userid","flappy1","flappy2","flappy3","flappy4","flappy5","snake1","snake2","snake3","snake4","snake5","a","Axios","post","game_id","getFlappyTop","top1Flappy","data","user_name","this","setState","top2Flappy","top3Flappy","top4Flappy","top5Flappy","getSnakeTop","top1Snake","top2Snake","top3Snake","top4Snake","top5Snake","s","put","global","user_id","get","getGlobals","$","document","ready","text","html","replace","usersGlobals","userGlobal","Component","Login","history","useHistory","useState","name","setName","password","setPassword","loginStatus","setLoginStatus","goSignup","push","goLogin","redirect","type","onChange","event","target","value","onClick","response","setItem","class","Logout","clear","Signup","signUpStatus","setSignUpStatus","res","Records","record","topFlappyUsers","topFlappyDate","cleanDate","Date","updatedAt","toDateString","flappyUsers","flappyDate","topSnakeUsers","topSnakeDate","snakeUsers","snakeDate","switchState","Games","JSON","stringify","gameOptions","birdGravity","birdSpeed","birdFlapPower","minPipeHeight","pipeDistance","pipeHole","topScore","snake","food","cursors","Record","flappy","load","image","holbie","pipebot","pipetop","pipeGroup","physics","add","group","pipePool","i","create","setScale","placePipes","setVelocityX","bird","sprite","sys","game","canvas","height","body","gravity","y","input","on","flap","score","scoreText","updateScore","inc","addScore","rightmost","getRightmostPipe","pipeHoleHeight","Phaser","Math","Between","pipeHolePosition","x","getBounds","width","setOrigin","velocity","rightmostPipe","getChildren","forEach","pipe","max","angle","activePointer","buttons","world","collide","die","right","length","game_name","console","log","scene","start","Scene","Game","flappystart","font","clickToStart","PhaserGame","initialize","AUTO","backgroundColor","default","arcade","debug","snakegame","foodimage","head","grass","fontFamily","fontSize","color","Food","Class","Extends","GameObjects","Image","call","setTexture","setPosition","total","children","eat","Snake","headPosition","Geom","Point","setDepth","alive","speed","moveTime","tail","heading","direction","update","time","move","faceLeft","faceRight","faceUp","faceDown","Wrap","Actions","ShiftPosition","GetFirst","grow","collideWithFood","updateGrid","grid","each","segment","bx","by","keyboard","createCursorKeys","delta","left","isDown","up","down","testGrid","validLocations","pos","RND","pick","repositionFood","snakestart","ProtectedRoute","component","rest","render","to","pathname","from","location","App","path","exact","SignUp","FlappyHolbie","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"oFAAA,IAAIA,EAAM,CACT,wBAAyB,CACxB,GACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,GACzBG,EAAOC,QAAUf,G,4KCoEFgB,EAzFI,WACjB,OACE,mCACE,qBAAKC,UAAU,SAAf,SACE,qBAAIA,UAAU,aAAd,UAEE,oBAAIA,UAAU,OAAd,SACE,oBAAGC,KAAK,QAAQD,UAAU,WAA1B,UACE,sBAAMA,UAAU,sBAAhB,uBACA,qBACEE,cAAY,OACZC,UAAU,QACVC,cAAY,MACZC,YAAU,qBACVC,KAAK,MACLC,MAAM,6BACNC,QAAQ,cACRR,UAAU,qDARZ,SAUE,oBAAGA,UAAU,WAAb,UACE,sBACES,KAAK,eACLC,EAAE,2MACFV,UAAU,iBAEZ,sBACES,KAAK,eACLC,EAAE,yMACFV,UAAU,yBAOpB,oBAAIA,UAAU,WAAd,SACE,oBAAGC,KAAK,SAASD,UAAU,WAA3B,UACE,qBAAKA,UAAU,WAAWQ,QAAQ,YAAlC,SACE,sBACEC,KAAK,eACLC,EAAE,u1CACFV,UAAU,mBAGd,sBAAMA,UAAU,YAAhB,wBAIJ,oBAAIA,UAAU,WAAd,SACE,oBAAGC,KAAK,WAAWD,UAAU,WAA7B,UACE,qBAAKA,UAAU,WAAWQ,QAAQ,YAAlC,SACE,sBACEC,KAAK,eACLC,EAAE,o0BACFV,UAAU,mBAGd,sBAAMA,UAAU,YAAhB,0BAIJ,oBAAIA,UAAU,WAAd,SACE,oBAAGC,KAAK,UAAUD,UAAU,WAA5B,UACE,sBAAKA,UAAU,WAAWQ,QAAQ,YAAlC,UACE,sBACEC,KAAK,eACLC,EAAE,obAKFV,UAAU,iBAEZ,sBACES,KAAK,eACLC,EAAE,mKAEFV,UAAU,oBAGd,sBAAMA,UAAU,YAAhB,iC,iCC4GCW,E,kDArLb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,YAAa,EACbC,QAAS,GACTC,iBAAkB,GAClBC,gBAAiB,GACjBC,cAAe,GACfC,aAAc,GACdC,QAAQ,EACRC,SAAUC,aAAaC,QAAQ,YAC/BC,OAAQF,aAAaC,QAAQ,UAC7BE,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,IAtBO,E,4FA0BnB,4EAAAC,EAAA,sEAKUC,IAAMC,KAAK,4BAA6B,CAC5CC,QAAS,IANf,cAIQC,EAJR,OASQC,EAAaD,EAAaE,KAAK,GAAKF,EAAaE,KAAK,GAAK,EAC3DhB,EAAUe,EAAWE,YAAcC,KAAK9B,MAAMQ,SAAW,GAAK,EACpEsB,KAAKC,SAAS,CAAEnB,QAASA,IACnBoB,EAAaN,EAAaE,KAAK,GAAKF,EAAaE,KAAK,GAAK,EAC3Df,EAAUmB,EAAWH,YAAcC,KAAK9B,MAAMQ,SAAW,GAAK,EACpEsB,KAAKC,SAAS,CAAElB,QAASA,IACnBoB,EAAaP,EAAaE,KAAK,GAAKF,EAAaE,KAAK,GAAK,EAC3Dd,EAAUmB,EAAWJ,YAAcC,KAAK9B,MAAMQ,SAAW,EAAI,EACnEsB,KAAKC,SAAS,CAAEjB,QAASA,IACnBoB,EAAaR,EAAaE,KAAK,GAAKF,EAAaE,KAAK,GAAK,EAC3Db,EAAUmB,EAAWL,YAAcC,KAAK9B,MAAMQ,SAAW,EAAI,EACnEsB,KAAKC,SAAS,CAAEhB,QAASA,IACnBoB,EAAaT,EAAaE,KAAK,GAAKF,EAAaE,KAAK,GAAK,EAC3DZ,EAAUmB,EAAWN,YAAcC,KAAK9B,MAAMQ,SAAW,EAAI,EACnEsB,KAAKC,SAAS,CAAEf,QAASA,IAvB3B,UA0BUO,IAAMC,KAAK,4BAA6B,CAC5CC,QAAS,IA3Bf,eAyBQW,EAzBR,OA8BQC,EAAYD,EAAYR,KAAK,GAAKQ,EAAYR,KAAK,GAAK,EACxDX,EAASoB,EAAUR,YAAcC,KAAK9B,MAAMQ,SAAW,GAAK,EAClEsB,KAAKC,SAAS,CAAEd,OAAQA,IAClBqB,EAAYF,EAAYR,KAAK,GAAKQ,EAAYR,KAAK,GAAK,EACxDV,EAASoB,EAAUT,YAAcC,KAAK9B,MAAMQ,SAAW,GAAK,EAClEsB,KAAKC,SAAS,CAAEb,OAAQA,IAClBqB,EAAYH,EAAYR,KAAK,GAAKQ,EAAYR,KAAK,GAAK,EACxDT,EAASoB,EAAUV,YAAcC,KAAK9B,MAAMQ,SAAW,EAAI,EACjEsB,KAAKC,SAAS,CAAEZ,OAAQA,IAClBqB,EAAYJ,EAAYR,KAAK,GAAKQ,EAAYR,KAAK,GAAK,EACxDR,EAASoB,EAAUX,YAAcC,KAAK9B,MAAMQ,SAAW,EAAI,EACjEsB,KAAKC,SAAS,CAAEX,OAAQA,IAClBqB,EAAYL,EAAYR,KAAK,GAAKQ,EAAYR,KAAK,GAAK,EACxDP,EAASoB,EAAUZ,YAAcC,KAAK9B,MAAMQ,SAAW,EAAI,EACjEsB,KAAKC,SAAS,CAAEV,OAAQA,IAGlBqB,EAAIZ,KAAK9B,MACTC,EACJyC,EAAE9B,QACA8B,EAAE7B,QACF6B,EAAE5B,QACF4B,EAAE3B,QACF2B,EAAE1B,QACF0B,EAAEzB,OACFyB,EAAExB,OACFwB,EAAEvB,OACFuB,EAAEtB,OACFsB,EAAErB,OAENS,KAAKC,SAAS,CAAE9B,YAAaA,IAE7BsB,IAAMoB,IAAI,uBAAwB,CAChCC,OAAQd,KAAK9B,MAAMC,YACnB4C,QAASf,KAAK9B,MAAMW,OACpBkB,UAAWC,KAAK9B,MAAMQ,WAjE1B,UAqEUe,IAAMuB,IAAI,sBArEpB,QAoEQC,EApER,OAsEEjB,KAAKC,SAAS,CAAE7B,QAAS6C,EAAWnB,OAtEtC,iD,0EA4EA,WAAU,IAAD,OAGPoB,IAAEC,UAAUC,OAAM,WAChB,IAAMC,EAAOH,IAAE,WAAWI,OAAOC,QAAQ,IAAK,+BAC9CL,IAAE,WAAWI,KAAKD,MAGpB,IAAMjD,EAAU4B,KAAK9B,MAAME,QAAQjC,KAAI,SAAC2E,GACtC,OAAIA,EAAOf,YAAc,EAAK7B,MAAMQ,SAC3B,qBAAqBrB,UAAU,cAA/B,SAA8C,EAAKa,MAAMC,aAA/C2C,EAAO/D,IAEjB,qBAAqBM,UAAU,YAA/B,SAA4CyD,EAAOA,QAAzCA,EAAO/D,OAGtByE,EAAexB,KAAK9B,MAAME,QAAQjC,KAAI,SAACsF,GAC3C,OAAIA,EAAW1B,YAAc,EAAK7B,MAAMQ,SAC/B,qBAAyBrB,UAAU,cAAnC,SAAkDoE,EAAW1B,WAAnD0B,EAAW1E,IAErB,qBAAyBM,UAAU,YAAnC,SAAgDoE,EAAW1B,WAAjD0B,EAAW1E,OAIhC,OACE,qCACE,cAAC,EAAD,IACA,sBAAKM,UAAU,OAAf,UACE,oBAAIN,GAAG,SAAP,wBACA,sBAAKM,UAAU,OAAf,UACE,qDACE,oBAAIA,UAAU,aAAd,SAA4B2C,KAAK9B,MAAME,QAAQ,GAAK4B,KAAK9B,MAAME,QAAQ,GAAG2B,UAAY,QAG1F,sBAAK1C,UAAU,aAAf,UACE,6CACA,8CACA,8CACA,6CACA,6CACA,gDAGF,sBAAKA,UAAU,SAAf,UAEE,sBAAKA,UAAU,gBAAf,UACE,iCACE,mDAEF,6BAAK2C,KAAK9B,MAAMC,YAAc6B,KAAK9B,MAAMC,YAAc,OAGzD,sBAAKd,UAAU,cAAf,UACE,iCAAQ,qDACR,kCACE,gCACE,+BACE,sCACA,6CAGJ,gCACE,+BACE,6BACGmE,IAEH,6BACGpD,4B,GA5KJsD,a,QC2GJC,EA1GD,WAIV,IAAIC,EAAUC,cAEd,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAIMC,EAAW,WACbT,EAAQU,KAAK,YAEXC,EAAU,WACZH,KAEEI,EAAW,WACbZ,EAAQU,KAAK,UAyDjB,OATKH,GACDjB,IAAEC,UAAUC,OAAM,WACd,IAAMC,EAAOH,IAAE,WAAWI,OAAOC,QAAQ,IAAK,+BAC9CL,IAAE,WAAWI,KAAKD,MAMrBc,EA0BO,8BAAMA,IAxBV,sBAAK9E,UAAU,QAAf,UACI,oBAAIN,GAAG,SAAP,mBACA,6BAAKoF,IACL,sBAAKpF,GAAG,OAAR,UACI,0CACA,uBAAO0F,KAAK,OAAOC,SAAU,SAACC,GAC1BX,EAAQW,EAAMC,OAAOC,aAI7B,sBAAK9F,GAAG,WAAR,UACI,8CACA,uBAAO0F,KAAK,WAAWC,SAAU,SAACC,GAC9BT,EAAYS,EAAMC,OAAOC,aAIjC,sBAAKxF,UAAU,UAAf,UACI,wBAAQyF,QAvEV,WACVrD,IAAMC,KAAK,mBAAoB,CAC3BqC,KAAMA,EACNE,SAAUA,IACXvF,MAAK,SAACqG,GACDA,EAASjD,KAAK,IAEdnB,aAAaqE,QAAQ,SAAUD,EAASjD,KAAK,GAAG/C,IAChD4B,aAAaqE,QAAQ,WAAYD,EAASjD,KAAK,GAAGiC,MAClDpD,aAAaqE,QAAQ,WAAYD,EAASjD,KAAK,GAAGmC,UAClDG,EACI,sBAAK/E,UAAU,QAAf,UACI,qBAAK4F,MAAM,oBAAX,SACI,sBAAKA,MAAM,cAAX,UACI,qBAAKA,MAAM,oBACX,qBAAKA,MAAM,sBAGnB,+CAAkBlB,EAAlB,QACA,wBAAQe,QAASN,EAAUnF,UAAU,QAArC,4BAGR+E,EACI,sBAAK/E,UAAU,QAAf,UACI,qBAAK4F,MAAM,oBAAX,SACI,sBAAKA,MAAM,cAAX,UACI,qBAAKA,MAAM,oBACX,qBAAKA,MAAM,gBACX,qBAAKA,MAAM,sBAGnB,iDAAoBlB,EAApB,2BACA,sBAAK1E,UAAU,UAAf,UACI,wBAAQyF,QAASP,EAASlF,UAAU,QAApC,uBACA,wBAAQyF,QAAST,EAAUhF,UAAU,QAArC,+BAqCgBA,UAAU,QAAlC,oBACA,wBAAQyF,QAAST,EAAUhF,UAAU,QAArC,4BC5EL6F,EAzBA,WAGXvE,aAAawE,QAEb,IAAIvB,EAAUC,cAKd,OACI,sBAAKxE,UAAU,SAAf,UACI,4CACA,qBAAK4F,MAAM,oBAAX,SACI,sBAAKA,MAAM,cAAX,UACI,qBAAKA,MAAM,oBACX,qBAAKA,MAAM,gBACX,qBAAKA,MAAM,sBAGnB,wBAAQH,QAdA,WACZlB,EAAQU,KAAK,MAaT,uBCuHGc,EAtIA,WAIX,IAAIxB,EAAUC,cACd,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOuB,EAAP,KAAqBC,EAArB,KAIMf,EAAU,WACZX,EAAQU,KAAK,MAEXD,EAAW,WACbT,EAAQU,KAAK,WACbgB,KAqFJ,OARKD,GACDnC,IAAEC,UAAUC,OAAM,WACd,IAAMC,EAAOH,IAAE,WAAWI,OAAOC,QAAQ,IAAK,+BAC9CL,IAAE,WAAWI,KAAKD,MAKrBgC,EA6BO,8BAAMA,IA3BV,mCACI,sBAAKhG,UAAU,SAAf,UACI,oBAAIN,GAAG,SAAP,oBACA,6BAAKsG,IACL,sBAAKtG,GAAG,OAAR,UACI,0CACA,uBAAO0F,KAAK,OAAOC,SAAU,SAACC,GAC1BX,EAAQW,EAAMC,OAAOC,aAI7B,sBAAK9F,GAAG,WAAR,UACI,8CACA,uBAAO0F,KAAK,OAAOC,SAAU,SAACC,GAC1BT,EAAYS,EAAMC,OAAOC,aAIjC,sBAAKxF,UAAU,UAAf,UACI,wBAAQyF,QAvGZ,WAEC,KAATf,GACAG,EAAY,IACZoB,EACI,sBAAKjG,UAAU,SAAf,UACI,qBAAK4F,MAAM,oBAAX,SACI,sBAAKA,MAAM,cAAX,UACI,qBAAKA,MAAM,oBACX,qBAAKA,MAAM,gBACX,qBAAKA,MAAM,sBAGnB,wDACA,wBAAQH,QAAST,EAAjB,4BAIY,KAAbJ,GAEPD,EAAQ,IACRsB,EACI,sBAAKjG,UAAU,SAAf,UACI,qBAAK4F,MAAM,oBAAX,SACI,sBAAKA,MAAM,cAAX,UACI,qBAAKA,MAAM,oBACX,qBAAKA,MAAM,gBACX,qBAAKA,MAAM,sBAGnB,4DACA,wBAAQH,QAAST,EAAjB,4BAMR5C,IAAMC,KAAK,oBAAqB,CAC5BqC,KAAMA,EACNE,SAAUA,IACXvF,MAAK,SAAC6G,GACDA,EAAIzD,KAAK,GACTwD,EACI,sBAAKjG,UAAU,SAAf,UACI,qBAAK4F,MAAM,oBAAX,SACI,sBAAKA,MAAM,cAAX,UACI,qBAAKA,MAAM,oBACX,qBAAKA,MAAM,sBAGnB,+DACA,wBAAQH,QAASP,EAAjB,uBAGRe,EACI,sBAAKjG,UAAU,SAAf,UACI,qBAAK4F,MAAM,oBAAX,SACI,sBAAKA,MAAM,cAAX,UACI,qBAAKA,MAAM,oBACX,qBAAKA,MAAM,gBACX,qBAAKA,MAAM,sBAGnB,+DACA,wBAAQH,QAASP,EAAjB,gCAuCJ,4BACA,wBAAQO,QAASP,EAAjB,iCCqGTiB,E,kDAhOX,WAAYvF,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTG,iBAAkB,GAClBC,gBAAiB,GACjBC,cAAe,GACfC,aAAc,GACdC,QAAQ,EACRC,SAAUC,aAAaC,QAAQ,aATpB,E,4FAgBnB,kCAAAY,EAAA,sEAIcC,IAAMC,KAAK,4BAA6B,CAC1CC,QAAS,IALrB,cAGUtB,EAHV,OAOI2B,KAAKC,SAAS,CAAE5B,iBAAkBA,EAAiByB,OAPvD,SAWcL,IAAMC,KAAK,4BAA6B,CAC1CC,QAAS,IAZrB,cAUUrB,EAVV,OAcI0B,KAAKC,SAAS,CAAE3B,gBAAiBA,EAAgBwB,OAdrD,UAkBgCL,IAAMC,KAAK,yBAA0B,CAC7DC,QAAS,IAnBjB,eAkBUpB,EAlBV,OAqBIyB,KAAKC,SAAS,CAAE1B,cAAeA,EAAcuB,OArBjD,UAwB+BL,IAAMC,KAAK,yBAA0B,CAC5DC,QAAS,IAzBjB,QAwBUnB,EAxBV,OA2BIwB,KAAKC,SAAS,CAAEzB,aAAcA,EAAasB,OA3B/C,iD,0EAgCA,WAAU,IAAD,OAICzB,EAAmB2B,KAAK9B,MAAMG,iBAAiBlC,KAAI,SAACsH,GAAa,OAAOA,EAAO1D,YAAc,EAAK7B,MAAMQ,SAAW,qBAAKrB,UAAU,QAAf,SAAwBoG,EAAOA,SAAgB,8BAAMA,EAAOA,YAC/KC,EAAiB1D,KAAK9B,MAAMG,iBAAiBlC,KAAI,SAACsH,GAAa,OAAOA,EAAO1D,YAAc,EAAK7B,MAAMQ,SAAW,qBAAKrB,UAAU,QAAf,SAAwBoG,EAAO1D,YAAmB,8BAAM0D,EAAO1D,eAChL4D,EAAgB3D,KAAK9B,MAAMG,iBAAiBlC,KAAI,SAACsH,GACnD,IAAMG,EAAY,IAAIC,KAAKJ,EAAOK,WAClC,OAAOL,EAAO1D,YAAc,EAAK7B,MAAMQ,SAAW,qBAAKrB,UAAU,QAAf,SAAwBuG,EAAUG,iBAAwB,8BAAMH,EAAUG,oBAG1HxF,EAAgByB,KAAK9B,MAAMK,cAAcpC,KAAI,SAACsH,GAAa,OAAOA,EAAO1D,YAAc,EAAK7B,MAAMQ,SAAW,qBAAKrB,UAAU,QAAf,SAAwBoG,EAAOA,SAAgB,8BAAMA,EAAOA,YACzKO,EAAchE,KAAK9B,MAAMK,cAAcpC,KAAI,SAACsH,GAAa,OAAOA,EAAO1D,YAAc,EAAK7B,MAAMQ,SAAW,qBAAKrB,UAAU,QAAf,SAAwBoG,EAAO1D,YAAmB,8BAAM0D,EAAO1D,eAC1KkE,EAAajE,KAAK9B,MAAMK,cAAcpC,KAAI,SAACsH,GAC7C,IAAMG,EAAY,IAAIC,KAAKJ,EAAOK,WAClC,OAAOL,EAAO1D,YAAc,EAAK7B,MAAMQ,SAAW,qBAAKrB,UAAU,QAAf,SAAwBuG,EAAUG,iBAAwB,8BAAMH,EAAUG,oBAI1HzF,EAAkB0B,KAAK9B,MAAMI,gBAAgBnC,KAAI,SAACsH,GAAa,OAAOA,EAAO1D,YAAc,EAAK7B,MAAMQ,SAAW,qBAAKrB,UAAU,QAAf,SAAwBoG,EAAOA,SAAgB,8BAAMA,EAAOA,YAC7KS,EAAgBlE,KAAK9B,MAAMI,gBAAgBnC,KAAI,SAACsH,GAAa,OAAOA,EAAO1D,YAAc,EAAK7B,MAAMQ,SAAW,qBAAKrB,UAAU,QAAf,SAAwBoG,EAAO1D,YAAmB,8BAAM0D,EAAO1D,eAC9KoE,EAAenE,KAAK9B,MAAMI,gBAAgBnC,KAAI,SAACsH,GACjD,IAAMG,EAAY,IAAIC,KAAKJ,EAAOK,WAClC,OAAOL,EAAO1D,YAAc,EAAK7B,MAAMQ,SAAW,qBAAKrB,UAAU,QAAf,SAAwBuG,EAAUG,iBAAwB,8BAAMH,EAAUG,oBAG1HvF,EAAewB,KAAK9B,MAAMM,aAAarC,KAAI,SAACsH,GAAa,OAAOA,EAAO1D,YAAc,EAAK7B,MAAMQ,SAAW,qBAAKrB,UAAU,QAAf,SAAwBoG,EAAOA,SAAgB,8BAAMA,EAAOA,YACvKW,EAAapE,KAAK9B,MAAMM,aAAarC,KAAI,SAACsH,GAAa,OAAOA,EAAO1D,YAAc,EAAK7B,MAAMQ,SAAW,qBAAKrB,UAAU,QAAf,SAAwBoG,EAAO1D,YAAmB,8BAAM0D,EAAO1D,eACxKsE,EAAYrE,KAAK9B,MAAMM,aAAarC,KAAI,SAACsH,GAC3C,IAAMG,EAAY,IAAIC,KAAKJ,EAAOK,WAClC,OAAOL,EAAO1D,YAAc,EAAK7B,MAAMQ,SAAW,qBAAKrB,UAAU,QAAf,SAAwBuG,EAAUG,iBAAwB,8BAAMH,EAAUG,oBAG1HO,EAAc,YACU,IAAtB,EAAKpG,MAAMO,OACX,EAAKwB,SAAS,CAAExB,QAAQ,IAExB,EAAKwB,SAAS,CAAExB,QAAQ,KAQhC,OAA0B,IAAtBuB,KAAK9B,MAAMO,OAEP,qCACI,cAAC,EAAD,IACA,sBAAKpB,UAAU,aAAf,UACI,mBAAGyF,QAASwB,EAAZ,SAAyB,iDACzB,uCACA,sBAAKjH,UAAU,gBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,iCAAQ,iDACR,wBAAOA,UAAU,cAAjB,UACI,gCACI,+BACI,wCACA,sCACA,2CAGR,gCACI,+BACI,6BACKgB,IAEL,6BACKqF,IAEL,6BACKC,eAOrB,sBAAKtG,UAAU,YAAf,UACI,iCAAQ,yCACR,wBAAOA,UAAU,cAAjB,UACI,gCACI,+BACI,wCACA,sCACA,2CAGR,gCACI,+BACI,6BACKiB,IAEL,6BACK4F,IAEL,6BACKC,yBAWV,IAAtBnE,KAAK9B,MAAMO,OAEZ,qCACI,cAAC,EAAD,IACA,sBAAKpB,UAAU,aAAf,UACI,mBAAGyF,QAASwB,EAAZ,SAAyB,0CACzB,6CACA,sBAAKjH,UAAU,gBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,iCAAQ,iDACR,wBAAOA,UAAU,cAAjB,UACI,gCACI,+BACI,wCACA,sCACA,2CAGR,gCACI,+BACI,6BACKkB,IAEL,6BACKyF,IAEL,6BACKC,eAOrB,sBAAK5G,UAAU,YAAf,UACI,iCAAQ,yCACR,wBAAOA,UAAU,cAAjB,UACI,gCACI,+BACI,wCACA,sCACA,2CAGR,gCACI,+BACI,6BACKmB,IAEL,6BACK4F,IAEL,6BACKC,6BArDpC,M,GAhKS3C,aCyEP6C,EAvED,WAIV,IAAI3C,EAAUC,cA4Cd,OATApC,IAAMC,KAAK,wBAAyB,CAChCqB,QAASpC,aAAaC,QAAQ,YAC/BlC,MAAK,SAACqG,GACDA,EAASjD,KAAK,GAAInB,aAAaqE,QAAQ,SAAUwB,KAAKC,UAAU1B,EAASjD,OACxEnB,aAAaqE,QAAQ,SAAU,MAMpC,qCACI,cAAC,EAAD,IACA,sBAAK3F,UAAU,QAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,eACf,+CACA,4KACA,mBAAGA,UAAU,cAAb,+BACA,mBAAGC,KAAK,GAAGwF,QAhDV,WACb,IACMf,EAAO,eACbpD,aAAaqE,QAAQ,SAFV,GAGXrE,aAAaqE,QAAQ,WAAYjB,GAEjCtC,IAAMoB,IAAI,qBAAsB,CAC5BkB,KAAMA,EACNhF,GAPO,IAUX6E,EAAQU,KAAK,YAqCD,SAA8B,6CAElC,sBAAKjF,UAAU,OAAf,UACI,qBAAKA,UAAU,cACf,uCACA,yLACA,mBAAGA,UAAU,YAAb,+BACA,mBAAGC,KAAK,GAAGwF,QAxCX,WACZ,IACMf,EAAO,QACbpD,aAAaqE,QAAQ,SAFV,GAGXrE,aAAaqE,QAAQ,WAAYjB,GAEjCtC,IAAMoB,IAAI,qBAAsB,CAC5BkB,KAAMA,EACNhF,GAPO,IAUX6E,EAAQU,KAAK,WA6BD,SAA6B,oD,wBCvElC,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,mCCOnCoC,EAAc,CAGhBC,YAAa,IAGbC,UAAW,IAGXC,cAAe,IAGfC,cAAe,GAGfC,aAAc,CAAC,IAAK,KAGpBC,SAAU,CAAC,IAAK,KAGhBC,SAAU,G,IClBVC,EACAC,EACAC,EACAC,ED0IWC,E,kDA5GX,aAAe,IAAD,6BACV,cAAM,UAXV7F,IAAMC,KAAK,uBAAwB,CAC/BqB,QAASpC,aAAaC,QAAQ,UAC9Be,QAAShB,aAAaC,QAAQ,YAC/BlC,MAAK,SAACqG,GACDA,EAASjD,KAAK,KAAI4E,EAAYO,SAAWlC,EAASjD,KAAK,GAAG2D,WAMpD,E,2CAOd,WACIzD,KAAKuF,KAAKC,MAAM,OAAQC,GACxBzF,KAAKuF,KAAKC,MAAM,UAAWE,GAC3B1F,KAAKuF,KAAKC,MAAM,UAAWG,K,oBAK/B,WACI3F,KAAK4F,UAAY5F,KAAK6F,QAAQC,IAAIC,QAClC/F,KAAKgG,SAAW,GAChB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnBjG,KAAKgG,SAAS1D,KAAKtC,KAAK4F,UAAUM,OAAO,EAAG,EAAG,WAAWC,SAAS,EAAG,MACtEnG,KAAKgG,SAAS1D,KAAKtC,KAAK4F,UAAUM,OAAO,EAAG,EAAG,WAAWC,SAAS,EAAG,MACtEnG,KAAKoG,YAAW,GAEpBpG,KAAK4F,UAAUS,cAAc3B,EAAYE,WACzC5E,KAAKsG,KAAOtG,KAAK6F,QAAQC,IAAIS,OAAO,GAAIvG,KAAKwG,IAAIC,KAAKC,OAAOC,OAAS,EAAG,QAAQR,SAAS,IAC1FnG,KAAKsG,KAAKM,KAAKC,QAAQC,EAAIpC,EAAYC,YACvC3E,KAAK+G,MAAMC,GAAG,cAAehH,KAAKiH,KAAMjH,MACxCA,KAAKkH,MAAQ,EACblH,KAAKmH,UAAYnH,KAAK8F,IAAIzE,KAAK,GAAI,GAAI,IACvCrB,KAAKoH,YAAYpH,KAAKkH,S,yBAG1B,SAAYG,GACRrH,KAAKkH,OAASG,EACdrH,KAAKmH,UAAU9F,KAAO,UAAYrB,KAAKkH,MAAQ,aAAexC,EAAYO,W,wBAG9E,SAAWqC,GACP,IAAIC,EAAYvH,KAAKwH,mBACjBC,EAAiBC,IAAOC,KAAKC,QAAQlD,EAAYM,SAAS,GAAIN,EAAYM,SAAS,IACnF6C,EAAmBH,IAAOC,KAAKC,QAAQlD,EAAYI,cAAgB2C,EAAiB,EAAGzH,KAAKwG,IAAIC,KAAKC,OAAOC,OAASjC,EAAYI,cAAgB2C,EAAiB,GACtKzH,KAAKgG,SAAS,GAAG8B,EAAIP,EAAYvH,KAAKgG,SAAS,GAAG+B,YAAYC,MAAQN,IAAOC,KAAKC,QAAQlD,EAAYK,aAAa,GAAIL,EAAYK,aAAa,IAChJ/E,KAAKgG,SAAS,GAAGc,EAAIe,EAAmBJ,EAAiB,EACzDzH,KAAKgG,SAAS,GAAGiC,UAAU,EAAG,GAC9BjI,KAAKgG,SAAS,GAAG8B,EAAI9H,KAAKgG,SAAS,GAAG8B,EACtC9H,KAAKgG,SAAS,GAAGc,EAAIe,EAAmBJ,EAAiB,EACzDzH,KAAKgG,SAAS,GAAGiC,UAAU,EAAG,GAC9BjI,KAAKgG,SAAW,GACZsB,GACAtH,KAAKoH,YAAY,K,kBAIzB,WACIpH,KAAKsG,KAAKM,KAAKsB,SAASpB,GAAKpC,EAAYG,gB,8BAG7C,WACI,IAAIsD,EAAgB,EAIpB,OAHAnI,KAAK4F,UAAUwC,cAAcC,SAAQ,SAAUC,GAC3CH,EAAgBR,KAAKY,IAAIJ,EAAeG,EAAKR,MAE1CK,I,oBAKX,WACQnI,KAAKsG,KAAKkC,MAAQ,KAClBxI,KAAKsG,KAAKkC,OAAS,IAEnBxI,KAAK+G,MAAM0B,cAAcC,SAAW1I,KAAKsG,KAAKkC,OAAS,KACvDxI,KAAKsG,KAAKkC,OAAS,GAEvBxI,KAAK6F,QAAQ8C,MAAMC,QAAQ5I,KAAKsG,KAAMtG,KAAK4F,WAAW,WAClD5F,KAAK6I,QACN,KAAM7I,OACLA,KAAKsG,KAAKQ,EAAI9G,KAAKwG,IAAIC,KAAKC,OAAOC,QAAU3G,KAAKsG,KAAKQ,EAAI,IAC3D9G,KAAK6I,MAET7I,KAAK4F,UAAUwC,cAAcC,SAAQ,SAAUC,GACvCA,EAAKP,YAAYe,MAAQ,IACzB9I,KAAKgG,SAAS1D,KAAKgG,GACU,IAAzBtI,KAAKgG,SAAS+C,QACd/I,KAAKoG,YAAW,MAGzBpG,Q,iBAGP,WACI0E,EAAYO,SAAW0C,KAAKY,IAAIvI,KAAKkH,MAAOxC,EAAYO,UACxD,IAAMxB,EAASiB,EAAYO,SAE3BxF,IAAMoB,IAAI,uBAAwB,CAC9B4C,OAAQA,EACR1C,QAASpC,aAAaC,QAAQ,UAC9BmB,UAAWpB,aAAaC,QAAQ,YAChCe,QAAShB,aAAaC,QAAQ,UAC9BoK,UAAWrK,aAAaC,QAAQ,cACjClC,MAAK,WACJuM,QAAQC,IAAI,wBAGhBlJ,KAAKmJ,MAAMC,MAAM,mB,GA1GJ1B,IAAO2B,OEXbC,EA3BF,WAIT,IAAI1H,EAAUC,cAad,OACI,mCACI,sBAAKxE,UAAU,UAAf,UACI,wBAAQyF,QAZL,WACXlB,EAAQU,KAAK,UAWoBjF,UAAU,QAAnC,kBACA,wBAAQyF,QAVJ,WACZlB,EAAQU,KAAK,WASqBjF,UAAU,QAApC,yBCEDkM,E,kDApBX,aAAe,uCACL,e,2CAGV,WACIvJ,KAAKuF,KAAKC,MAAM,OAAQC,K,0BAG5B,WACIzF,KAAKmJ,MAAMC,MAAM,Y,oBAGrB,WACIpJ,KAAK8F,IAAIzE,KAAKrB,KAAKwG,IAAIC,KAAKC,OAAOsB,MAAM,EAAIhI,KAAKwG,IAAIC,KAAKC,OAAOC,OAAO,EAAI,IAAK,gBAAiB,CAAE6C,KAAM,oBAC3GxJ,KAAK8F,IAAIzE,KAAKrB,KAAKwG,IAAIC,KAAKC,OAAOsB,MAAM,EAAIhI,KAAKwG,IAAIC,KAAKC,OAAOC,OAAO,EAAI,iBAAkB,CAAE6C,KAAM,oBACvGxJ,KAAKsG,KAAOtG,KAAK6F,QAAQC,IAAIS,OAAO,GAAIvG,KAAKwG,IAAIC,KAAKC,OAAOC,OAAS,EAAG,QAAQR,SAAS,IAC1FnG,KAAK+G,MAAMC,GAAG,cAAehH,KAAKyJ,aAAczJ,U,GAlB9B0H,IAAO2B,OCqClBK,E,4MAhCXxL,MAAQ,CACJyL,YAAY,EACZlD,KAAM,CACFuB,MAAO,QACPrB,OAAQ,OACRlE,KAAMiF,IAAOkC,KACbC,gBAAiB,QACjBhE,QAAS,CACLiE,QAAS,SACTC,OAAQ,CACJlD,QAAS,CAAEC,EAAG,GACdkD,OAAO,IAGfb,MAAO,CAACI,EAAajE,K,4CAI7B,WAEI,MAA6BtF,KAAK9B,MAA1ByL,EAAR,EAAQA,WAAYlD,EAApB,EAAoBA,KACpB,OACI,8BACI,sBAAKpJ,UAAU,SAAf,UACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAWoJ,KAAMA,EAAMkD,WAAYA,a,GA1B9BjI,aCRV,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,kCP0U1BuI,M,kDAxSX,aAAe,IAAD,6BACV,cAAM,aAZVxK,IAAMC,KAAK,uBAAwB,CAC/BqB,QAASpC,aAAaC,QAAQ,UAC9Be,QAAShB,aAAaC,QAAQ,YAC/BlC,MAAK,SAACqG,GACiBsC,EAAlBtC,EAASjD,KAAK,GAAaiD,EAASjD,KAAK,GAAG2D,OAClC9E,aAAaC,QAAQ,eAAiBD,aAAaC,QAAQ,eAAiB,KAMhF,E,2CAOd,WACIoB,KAAKuF,KAAKC,MAAM,OAAQ0E,GACxBlK,KAAKuF,KAAKC,MAAM,OAAQoB,GACxB5G,KAAKuF,KAAKC,MAAM,OAAQ2E,GACxBnK,KAAKuF,KAAKC,MAAM,QAAS4E,K,oBAK7B,WAEIpK,KAAK8F,IAAIN,MAAM,IAAK,IAAK,SAASW,SAAS,GAC3CnG,KAAKmH,UAAYnH,KAAK8F,IAAIzE,KAAK,GAAI,GAAI,IAAK,CAAEgJ,WAAY,iDAAkDC,SAAU,OAAQC,MAAO,SAGrI,IAAIC,EAAO,IAAI9C,IAAO+C,MAAM,CAExBC,QAAShD,IAAOiD,YAAYC,MAE5BjB,WAEI,SAAcR,EAAOrB,EAAGhB,GACpBY,IAAOiD,YAAYC,MAAMC,KAAK7K,KAAMmJ,GAEpCnJ,KAAK8K,WAAW,QAChB9K,KAAK+K,YAAgB,GAAJjD,EAAY,GAAJhB,GACzB9G,KAAKiI,UAAU,GAEfjI,KAAKgL,MAAQ,EAEb7B,EAAM8B,SAASnF,IAAI9F,OAG3BkL,IAAK,WACDlL,KAAKgL,WAOTG,EAAQ,IAAIzD,IAAO+C,MAAM,CAEzBd,WAEA,SAAeR,EAAOrB,EAAGhB,GACrB9G,KAAKoL,aAAe,IAAI1D,IAAO2D,KAAKC,MAAMxD,EAAGhB,GAE7C9G,KAAK4G,KAAOuC,EAAMrD,IAAIC,QAEtB/F,KAAKmK,KAAOnK,KAAK4G,KAAKV,OAAW,GAAJ4B,EAAY,GAAJhB,EAAQ,QAAQX,SAAS,KAAMoF,SAAS,GACzEvL,KAAKmK,KAAKlC,UAAU,GAEpBjI,KAAKwL,OAAQ,EAEbxL,KAAKyL,MAAQ,IAEbzL,KAAK0L,SAAW,EAEhB1L,KAAK2L,KAAO,IAAIjE,IAAO2D,KAAKC,MAAMxD,EAAGhB,GAErC9G,KAAK4L,QApFb,EAqFQ5L,KAAK6L,UArFb,GAwFIC,OAAQ,SAAUC,GACd,GAAIA,GAAQ/L,KAAK0L,SACb,OAAO1L,KAAKgM,KAAKD,IAI7BE,SAAU,WAjGb,IAkGWjM,KAAK6L,WAjGd,IAiGkC7L,KAAK6L,YAC9B7L,KAAK4L,QAjGd,IAqGCM,UAAW,WAvGd,IAwGWlM,KAAK6L,WAvGd,IAuGkC7L,KAAK6L,YAC9B7L,KAAK4L,QAtGb,IA0GAO,OAAQ,WA3GT,IA4GSnM,KAAK6L,WA3Gb,IA2GmC7L,KAAK6L,YAChC7L,KAAK4L,QA/GhB,IAmHGQ,SAAU,WAjHX,IAkHSpM,KAAK6L,WAjHb,IAiHmC7L,KAAK6L,YAChC7L,KAAK4L,QApHd,IAwHCI,KAAM,SAAUD,GAQZ,OAAQ/L,KAAK4L,SACT,KAhIT,EAiIa5L,KAAKoL,aAAatD,EAAIJ,IAAOC,KAAK0E,KAAKrM,KAAKoL,aAAatD,EAAI,EAAG,EAAG,IACnE,MAEJ,KAnIR,EAoIY9H,KAAKoL,aAAatD,EAAIJ,IAAOC,KAAK0E,KAAKrM,KAAKoL,aAAatD,EAAI,EAAG,EAAG,IACnE,MAEJ,KA1IX,EA2Ie9H,KAAKoL,aAAatE,EAAIY,IAAOC,KAAK0E,KAAKrM,KAAKoL,aAAatE,EAAI,EAAG,EAAG,IACnE,MAEJ,KA7IT,EA8Ia9G,KAAKoL,aAAatE,EAAIY,IAAOC,KAAK0E,KAAKrM,KAAKoL,aAAatE,EAAI,EAAG,EAAG,IAc3E,OAVA9G,KAAK6L,UAAY7L,KAAK4L,QAGtBlE,IAAO4E,QAAQC,cAAcvM,KAAK4G,KAAKwB,cAAqC,GAAtBpI,KAAKoL,aAAatD,EAA8B,GAAtB9H,KAAKoL,aAAatE,EAAQ,EAAG9G,KAAK2L,MAKpGjE,IAAO4E,QAAQE,SAASxM,KAAK4G,KAAKwB,cAAe,CAAEN,EAAG9H,KAAKmK,KAAKrC,EAAGhB,EAAG9G,KAAKmK,KAAKrD,GAAK,IAG/FmC,QAAQC,IAAI,QAEZlJ,KAAKwL,OAAQ,GAEN,IAIPxL,KAAK0L,SAAWK,EAAO/L,KAAKyL,OAErB,IAIfgB,KAAM,WACYzM,KAAK4G,KAAKV,OAAOlG,KAAK2L,KAAK7D,EAAG9H,KAAK2L,KAAK7E,EAAG,QAAQX,SAAS,KAElE8B,UAAU,IAGtByE,gBAAiB,SAAUvH,GACvB,OAAInF,KAAKmK,KAAKrC,IAAM3C,EAAK2C,GAAK9H,KAAKmK,KAAKrD,IAAM3B,EAAK2B,IAC/C9G,KAAKyM,OAELtH,EAAK+F,MAGDlL,KAAKyL,MAAQ,IAAMtG,EAAK6F,MAAQ,IAAM,IACtChL,KAAKyL,OAAS,IAGX,IAOfkB,WAAY,SAAUC,GAWlB,OATA5M,KAAK4G,KAAKqE,SAAS4B,MAAK,SAAUC,GAE9B,IAAIC,EAAKD,EAAQhF,EAAI,GACjBkF,EAAKF,EAAQhG,EAAI,GAErB8F,EAAKI,GAAID,IAAM,KAIZH,KAKfzH,EAAO,IAAIqF,EAAKxK,KAAM,EAAG,GAAGmG,SAAS,KACrCjB,EAAQ,IAAIiG,EAAMnL,KAAM,EAAG,GAG3BoF,EAAUpF,KAAK+G,MAAMkG,SAASC,qB,oBAKlC,SAAOnB,EAAMoB,GAGT,GAFAnN,KAAKmH,UAAU9F,KAAO,UAAY8D,EAAK6F,MAAQ,aAAe3F,GAEzDH,EAAMsG,MAAO,CACd,IAAM/H,EAAS0B,EAAK6F,MAepB,OAdArM,aAAaqE,QAAQ,cAAeS,GAGpChE,IAAMoB,IAAI,uBAAwB,CAC9B4C,OAAQA,EACR1C,QAASpC,aAAaC,QAAQ,UAC9BmB,UAAWpB,aAAaC,QAAQ,YAChCe,QAAShB,aAAaC,QAAQ,UAC9BoK,UAAWrK,aAAaC,QAAQ,cACjClC,MAAK,WACJuM,QAAQC,IAAI,6BAGhBlJ,KAAKmJ,MAAMC,MAAM,cAWjBhE,EAAQgI,KAAKC,OACbnI,EAAM+G,WAED7G,EAAQ0D,MAAMuE,OACnBnI,EAAMgH,YAED9G,EAAQkI,GAAGD,OAChBnI,EAAMiH,SAED/G,EAAQmI,KAAKF,QAClBnI,EAAMkH,WAGNlH,EAAM4G,OAAOC,IAET7G,EAAMwH,gBAAgBvH,IAOtC,WAOI,IAFA,IAAIqI,EAAW,GAEN1G,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB0G,EAAS1G,GAAK,GAEd,IAAK,IAAIgB,EAAI,EAAGA,EAAI,GAAIA,IACpB0F,EAAS1G,GAAGgB,IAAK,EAIzB5C,EAAMyH,WAAWa,GAKjB,IAFA,IAAIC,EAAiB,GAEZ3G,EAAI,EAAGA,EAAI,GAAIA,IACpB,IAAK,IAAIgB,EAAI,EAAGA,EAAI,GAAIA,KACG,IAAnB0F,EAAS1G,GAAGgB,IAEZ2F,EAAenL,KAAK,CAAEwF,EAAGA,EAAGhB,EAAGA,IAK3C,GAAI2G,EAAe1E,OAAS,EAAG,CAE3B,IAAI2E,EAAMhG,IAAOC,KAAKgG,IAAIC,KAAKH,GAK/B,OAFAtI,EAAK4F,YAAoB,GAAR2C,EAAI5F,EAAgB,GAAR4F,EAAI5G,IAE1B,GA1CC+G,O,GAzPQnG,IAAO2B,OQHhByE,E,kDAtBX,aAAe,uCACL,c,2CAGV,WACI9N,KAAKuF,KAAKC,MAAM,OAAQ2E,GACxBnK,KAAKuF,KAAKC,MAAM,QAAS4E,K,0BAG7B,WACIpK,KAAKmJ,MAAMC,MAAM,e,oBAGrB,WACIpJ,KAAK8F,IAAIN,MAAM,IAAK,IAAK,SAASW,SAAS,GAC3CnG,KAAK8F,IAAIzE,KAAK,IAAK,IAAW,QAAS,CAAEmI,KAAM,kBAAmBe,MAAO,SACzEvK,KAAK8F,IAAIzE,KAAK,IAAK,IAAK,iBAAkB,CAAEmI,KAAM,kBAAmBe,MAAO,SAC5EvK,KAAK8F,IAAIN,MAAM,IAAK,IAAK,QAAQW,SAAS,IAC1CnG,KAAK+G,MAAMC,GAAG,cAAehH,KAAKyJ,aAAczJ,U,GApB/B0H,IAAO2B,OC8BjBK,E,4MA1BXxL,MAAQ,CACJyL,YAAY,EACZlD,KAAM,CACFuB,MAAO,IACPrB,OAAQ,IACRlE,KAAMiF,IAAOkC,KACbC,gBAAiB,OACjBV,MAAO,CAAC2E,EAAY7D,K,4CAI5B,WAEI,MAA6BjK,KAAK9B,MAA1ByL,EAAR,EAAQA,WAAYlD,EAApB,EAAoBA,KAEpB,OACI,8BACI,sBAAKpJ,UAAU,SAAf,UACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAWoJ,KAAMA,EAAMkD,WAAYA,a,GApB9BjI,a,gCCgBVqM,OArBf,YAA2D,IAAtBrM,EAAqB,EAAhCsM,UAAyBC,EAAO,iBAEhDvP,EAAWC,aAAaC,QAAQ,YAEtC,OACI,cAAC,IAAD,2BAAWqP,GAAX,IAAiBC,OAAS,SAACjQ,GACvB,OAAiB,OAAbS,EACO,cAACgD,EAAD,IAGH,cAAC,IAAD,CAAUyM,GAAI,CACVC,SAAU,IACVlQ,MAAO,CAAEmQ,KAAMpQ,EAAMqQ,kBCqB9BC,OAnBf,WACE,OACE,mCACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACT,UAAWrM,IACjC,cAAC,IAAD,CAAO6M,KAAK,UAAUR,UAAWU,IACjC,cAAC,IAAD,CAAOF,KAAK,UAAUC,OAAK,EAACT,UAAW9K,IACvC,cAAC,GAAD,CAAgBsL,KAAK,QAAQR,UAAWhQ,IACxC,cAAC,GAAD,CAAgBwQ,KAAK,WAAWR,UAAWxK,IAC3C,cAAC,GAAD,CAAgBgL,KAAK,SAASR,UAAWzJ,IACzC,cAAC,GAAD,CAAgBiK,KAAK,UAAUR,UAAWW,IAC1C,cAAC,GAAD,CAAgBH,KAAK,SAASR,UAAW7C,YCjBpCyD,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpS,MAAK,YAAkD,IAA/CqS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASlB,OACP,cAAC,IAAMmB,WAAP,UACE,cAAC,GAAD,MAEFlO,SAASmO,eAAe,SAM1BV,O","file":"static/js/main.98157207.chunk.js","sourcesContent":["var map = {\n\t\"./ion-phaser.entry.js\": [\n\t\t80,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 77;\nmodule.exports = webpackAsyncContext;","import React from 'react';\r\n\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar\">\r\n        <ul className=\"navbar-nav\">\r\n\r\n          <li className=\"logo\">\r\n            <a href=\"/Home\" className=\"nav-link\">\r\n              <span className=\"link-text logo-text\">Record !t</span>\r\n              <svg\r\n                aria-hidden=\"true\"\r\n                focusable=\"false\"\r\n                data-prefix=\"fad\"\r\n                data-icon=\"angle-double-right\"\r\n                role=\"img\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 448 512\"\r\n                className=\"svg-inline--fa fa-angle-double-right fa-w-14 fa-5x\"\r\n              >\r\n                <g className=\"fa-group\">\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M224 273L88.37 409a23.78 23.78 0 0 1-33.8 0L32 386.36a23.94 23.94 0 0 1 0-33.89l96.13-96.37L32 159.73a23.94 23.94 0 0 1 0-33.89l22.44-22.79a23.78 23.78 0 0 1 33.8 0L223.88 239a23.94 23.94 0 0 1 .1 34z\"\r\n                    className=\"fa-secondary\"\r\n                  ></path>\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M415.89 273L280.34 409a23.77 23.77 0 0 1-33.79 0L224 386.26a23.94 23.94 0 0 1 0-33.89L320.11 256l-96-96.47a23.94 23.94 0 0 1 0-33.89l22.52-22.59a23.77 23.77 0 0 1 33.79 0L416 239a24 24 0 0 1-.11 34z\"\r\n                    className=\"fa-primary\"\r\n                  ></path>\r\n                </g>\r\n              </svg>\r\n            </a>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <a href=\"/Games\" className=\"nav-link\">\r\n              <svg className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M16.803,18.615h-4.535c-1,0-1.814-0.812-1.814-1.812v-4.535c0-1.002,0.814-1.814,1.814-1.814h4.535c1.001,0,1.813,0.812,1.813,1.814v4.535C18.616,17.803,17.804,18.615,16.803,18.615zM17.71,12.268c0-0.502-0.405-0.906-0.907-0.906h-4.535c-0.501,0-0.906,0.404-0.906,0.906v4.535c0,0.502,0.405,0.906,0.906,0.906h4.535c0.502,0,0.907-0.404,0.907-0.906V12.268z M16.803,9.546h-4.535c-1,0-1.814-0.812-1.814-1.814V3.198c0-1.002,0.814-1.814,1.814-1.814h4.535c1.001,0,1.813,0.812,1.813,1.814v4.534C18.616,8.734,17.804,9.546,16.803,9.546zM17.71,3.198c0-0.501-0.405-0.907-0.907-0.907h-4.535c-0.501,0-0.906,0.406-0.906,0.907v4.534c0,0.501,0.405,0.908,0.906,0.908h4.535c0.502,0,0.907-0.406,0.907-0.908V3.198z M7.733,18.615H3.198c-1.002,0-1.814-0.812-1.814-1.812v-4.535c0-1.002,0.812-1.814,1.814-1.814h4.535c1.002,0,1.814,0.812,1.814,1.814v4.535C9.547,17.803,8.735,18.615,7.733,18.615zM8.64,12.268c0-0.502-0.406-0.906-0.907-0.906H3.198c-0.501,0-0.907,0.404-0.907,0.906v4.535c0,0.502,0.406,0.906,0.907,0.906h4.535c0.501,0,0.907-0.404,0.907-0.906V12.268z M7.733,9.546H3.198c-1.002,0-1.814-0.812-1.814-1.814V3.198c0-1.002,0.812-1.814,1.814-1.814h4.535c1.002,0,1.814,0.812,1.814,1.814v4.534C9.547,8.734,8.735,9.546,7.733,9.546z M8.64,3.198c0-0.501-0.406-0.907-0.907-0.907H3.198c-0.501,0-0.907,0.406-0.907,0.907v4.534c0,0.501,0.406,0.908,0.907,0.908h4.535c0.501,0,0.907-0.406,0.907-0.908V3.198z\"\r\n                  className=\"fa-secondary\"\r\n                ></path>\r\n              </svg>\r\n              <span className=\"link-text\">Games</span>\r\n            </a>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <a href=\"/Records\" className=\"nav-link\">\r\n              <svg className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M15.94,10.179l-2.437-0.325l1.62-7.379c0.047-0.235-0.132-0.458-0.372-0.458H5.25c-0.241,0-0.42,0.223-0.373,0.458l1.634,7.376L4.06,10.179c-0.312,0.041-0.446,0.425-0.214,0.649l2.864,2.759l-0.724,3.947c-0.058,0.315,0.277,0.554,0.559,0.401l3.457-1.916l3.456,1.916c-0.419-0.238,0.56,0.439,0.56-0.401l-0.725-3.947l2.863-2.759C16.388,10.604,16.254,10.22,15.94,10.179M10.381,2.778h3.902l-1.536,6.977L12.036,9.66l-1.655-3.546V2.778z M5.717,2.778h3.903v3.335L7.965,9.66L7.268,9.753L5.717,2.778zM12.618,13.182c-0.092,0.088-0.134,0.217-0.11,0.343l0.615,3.356l-2.938-1.629c-0.057-0.03-0.122-0.048-0.184-0.048c-0.063,0-0.128,0.018-0.185,0.048l-2.938,1.629l0.616-3.356c0.022-0.126-0.019-0.255-0.11-0.343l-2.441-2.354l3.329-0.441c0.128-0.017,0.24-0.099,0.295-0.215l1.435-3.073l1.435,3.073c0.055,0.116,0.167,0.198,0.294,0.215l3.329,0.441L12.618,13.182z\"\r\n                  className=\"fa-secondary\"\r\n                ></path>\r\n              </svg>\r\n              <span className=\"link-text\">Records</span>\r\n            </a>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <a href=\"/Logout\" className=\"nav-link\">\r\n              <svg className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M13.53,2.238c-0.389-0.164-0.844,0.017-1.01,0.41c-0.166,0.391,0.018,0.845,0.411,1.01\r\n                  c2.792,1.181,4.598,3.904,4.6,6.937c0,4.152-3.378,7.529-7.53,7.529c-4.151,0-7.529-3.377-7.529-7.529\r\n                  C2.469,7.591,4.251,4.878,7.01,3.683C7.401,3.515,7.58,3.06,7.412,2.67c-0.17-0.392-0.624-0.571-1.014-0.402\r\n                  c-3.325,1.44-5.472,4.708-5.47,8.327c0,5.002,4.069,9.071,9.071,9.071c5.003,0,9.073-4.07,9.073-9.071\r\n                  C19.07,6.939,16.895,3.659,13.53,2.238z\"\r\n                  className=\"fa-secondary\"\r\n                ></path>\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M9.999,7.616c0.426,0,0.771-0.345,0.771-0.771v-5.74c0-0.426-0.345-0.771-0.771-0.771\r\n\t\t\t\t\t\t\t\tc-0.427,0-0.771,0.345-0.771,0.771v5.74C9.228,7.271,9.573,7.616,9.999,7.616z\"\r\n                  className=\"fa-secondary\"\r\n                ></path>\r\n              </svg>\r\n              <span className=\"link-text\">Logout</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import React, { Component } from 'react'\r\nimport Navigation from '../components/Navigation';\r\nimport Axios from 'axios';\r\nimport $ from 'jquery';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n  //______________________________Constructor__________________________________\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      globalPerso: 0,\r\n      globals: [],\r\n      topFlappyRecords: [],\r\n      topSnakeRecords: [],\r\n      flappyRecords: [],\r\n      snakeRecords: [],\r\n      showMe: true,\r\n      username: localStorage.getItem(\"username\"),\r\n      userid: localStorage.getItem(\"userid\"),\r\n      flappy1: \"\",\r\n      flappy2: \"\",\r\n      flappy3: \"\",\r\n      flappy4: \"\",\r\n      flappy5: \"\",\r\n      snake1: \"\",\r\n      snake2: \"\",\r\n      snake3: \"\",\r\n      snake4: \"\",\r\n      snake5: \"\"\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    //______________________________GET TOPS__________________________________\r\n\r\n    const getFlappyTop =\r\n      await Axios.post('/apiroutes/topGameRecords', {\r\n        game_id: 1 //flappy game_id\r\n      })\r\n    //get user's top 1, 2, 3 of flappy\r\n    const top1Flappy = getFlappyTop.data[0] ? getFlappyTop.data[0] : 0\r\n    const flappy1 = top1Flappy.user_name === this.state.username ? 15 : 0\r\n    this.setState({ flappy1: flappy1 })\r\n    const top2Flappy = getFlappyTop.data[1] ? getFlappyTop.data[1] : 0\r\n    const flappy2 = top2Flappy.user_name === this.state.username ? 10 : 0\r\n    this.setState({ flappy2: flappy2 })\r\n    const top3Flappy = getFlappyTop.data[2] ? getFlappyTop.data[2] : 0\r\n    const flappy3 = top3Flappy.user_name === this.state.username ? 7 : 0\r\n    this.setState({ flappy3: flappy3 })\r\n    const top4Flappy = getFlappyTop.data[3] ? getFlappyTop.data[3] : 0\r\n    const flappy4 = top4Flappy.user_name === this.state.username ? 5 : 0\r\n    this.setState({ flappy4: flappy4 })\r\n    const top5Flappy = getFlappyTop.data[4] ? getFlappyTop.data[4] : 0\r\n    const flappy5 = top5Flappy.user_name === this.state.username ? 3 : 0\r\n    this.setState({ flappy5: flappy5 })\r\n\r\n    const getSnakeTop =\r\n      await Axios.post('/apiroutes/topGameRecords', {\r\n        game_id: 2 //snake game_id\r\n      })\r\n    //get user's top 1, 2, 3 of flappy\r\n    const top1Snake = getSnakeTop.data[0] ? getSnakeTop.data[0] : 0\r\n    const snake1 = top1Snake.user_name === this.state.username ? 15 : 0\r\n    this.setState({ snake1: snake1 })\r\n    const top2Snake = getSnakeTop.data[1] ? getSnakeTop.data[1] : 0\r\n    const snake2 = top2Snake.user_name === this.state.username ? 10 : 0\r\n    this.setState({ snake2: snake2 })\r\n    const top3Snake = getSnakeTop.data[2] ? getSnakeTop.data[2] : 0\r\n    const snake3 = top3Snake.user_name === this.state.username ? 7 : 0\r\n    this.setState({ snake3: snake3 })\r\n    const top4Snake = getSnakeTop.data[3] ? getSnakeTop.data[3] : 0\r\n    const snake4 = top4Snake.user_name === this.state.username ? 5 : 0\r\n    this.setState({ snake4: snake4 })\r\n    const top5Snake = getSnakeTop.data[4] ? getSnakeTop.data[4] : 0\r\n    const snake5 = top5Snake.user_name === this.state.username ? 3 : 0\r\n    this.setState({ snake5: snake5 })\r\n\r\n    //Sum up global score\r\n    const s = this.state\r\n    const globalPerso =\r\n      s.flappy1\r\n      + s.flappy2\r\n      + s.flappy3\r\n      + s.flappy4\r\n      + s.flappy5\r\n      + s.snake1\r\n      + s.snake2\r\n      + s.snake3\r\n      + s.snake4\r\n      + s.snake5\r\n\r\n    this.setState({ globalPerso: globalPerso })\r\n    //______________________________PUT/GET GLOBAL__________________________________\r\n    Axios.put('/apiroutes/putGlobal', {\r\n      global: this.state.globalPerso,\r\n      user_id: this.state.userid,\r\n      user_name: this.state.username\r\n    })\r\n\r\n    const getGlobals =\r\n      await Axios.get('/apiroutes/globals')\r\n    this.setState({ globals: getGlobals.data })\r\n\r\n  }\r\n\r\n  //_______________________________Render___________________________________\r\n\r\n  render() {\r\n\r\n    //replace a letter (\"i\" by \"!\") to change its color\r\n    $(document).ready(function () {\r\n      const text = $(\"#phrase\").html().replace(/i/, \" <h1 class='letter'> !</h1>\");\r\n      $(\"#phrase\").html(text)\r\n    });\r\n\r\n    const globals = this.state.globals.map((global) => {\r\n      if (global.user_name === this.state.username) {\r\n        return <div key={global.id} className=\"myglobalrow\">{this.state.globalPerso}</div>\r\n      } else {\r\n        return <div key={global.id} className=\"globalrow\">{global.global}</div>\r\n      }\r\n    })\r\n    const usersGlobals = this.state.globals.map((userGlobal) => {\r\n      if (userGlobal.user_name === this.state.username) {\r\n        return <div key={userGlobal.id} className=\"myglobalrow\">{userGlobal.user_name}</div>\r\n      } else {\r\n        return <div key={userGlobal.id} className=\"globalrow\">{userGlobal.user_name}</div>\r\n      }\r\n    })\r\n\r\n    return (\r\n      <>\r\n        <Navigation />\r\n        <div className=\"Home\">\r\n          <h1 id=\"phrase\">RECORD  iT</h1>\r\n          <div className=\"best\">\r\n            <h1>Actual best player:</h1>\r\n              <h1 className=\"bestplayer\">{this.state.globals[0] ? this.state.globals[0].user_name : ''}</h1>\r\n          </div>\r\n\r\n          <div className=\"globalinfo\">\r\n            <p>Point scale:</p>\r\n            <p>Top1 = 15 pts</p>\r\n            <p>Top2 = 10 pts</p>\r\n            <p>Top3 = 7 pts</p>\r\n            <p>Top4 = 5 pts</p>\r\n            <p>Top5 = 3 pts</p>\r\n          </div>\r\n\r\n          <div className=\"global\">\r\n\r\n            <div className=\"myglobalscore\">\r\n              <header>\r\n                <h2>My global score</h2>\r\n              </header>\r\n              <h1>{this.state.globalPerso ? this.state.globalPerso : 0}</h1>\r\n            </div>\r\n\r\n            <div className=\"globalscore\">\r\n              <header><h2>Top global scores</h2></header>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>User</th>\r\n                    <th>Global</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      {usersGlobals}\r\n                    </td>\r\n                    <td>\r\n                      {globals}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Axios from 'axios'\r\nimport $ from 'jquery';\r\n\r\n\r\nconst Login = () => {\r\n\r\n    //______________________________Variables__________________________________\r\n\r\n    let history = useHistory();\r\n\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginStatus, setLoginStatus] = useState('')\r\n\r\n    //______________________________Functions__________________________________\r\n\r\n    const goSignup = () => {\r\n        history.push('/Signup')\r\n    }\r\n    const goLogin = () => {\r\n        setLoginStatus()\r\n    }\r\n    const redirect = () => {\r\n        history.push('/Home')\r\n    }\r\n\r\n\r\n    // Check user info,\r\n    // setLocalStorage if success, otherwise throw error\r\n    const login = () => {\r\n        Axios.post('/apiroutes/login', {\r\n            name: name,\r\n            password: password\r\n        }).then((response) => {\r\n            if (response.data[0]) {\r\n                //have to load all records\r\n                localStorage.setItem(\"userid\", response.data[0].id)\r\n                localStorage.setItem(\"username\", response.data[0].name)\r\n                localStorage.setItem(\"password\", response.data[0].password)\r\n                setLoginStatus(\r\n                    <div className=\"login\">\r\n                        <div class=\"emoji  emoji--yay\">\r\n                            <div class=\"emoji__face\">\r\n                                <div class=\"emoji__eyebrows\"></div>\r\n                                <div class=\"emoji__mouth\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <h1>Welcome back {name} !</h1>\r\n                        <button onClick={redirect} className=\"raise\">Come in !</button>\r\n                    </div>)\r\n            } else {\r\n                setLoginStatus(\r\n                    <div className=\"login\">\r\n                        <div class=\"emoji  emoji--wow\">\r\n                            <div class=\"emoji__face\">\r\n                                <div class=\"emoji__eyebrows\"></div>\r\n                                <div class=\"emoji__eyes\"></div>\r\n                                <div class=\"emoji__mouth\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <h1>No user named '{name}' or wrong password !</h1>\r\n                        <div className=\"buttons\">\r\n                            <button onClick={goLogin} className=\"raise\">Try again</button>\r\n                            <button onClick={goSignup} className=\"raise\">Signup</button>\r\n                        </div>\r\n                    </div>)\r\n            }\r\n        })\r\n    }\r\n\r\n    //replace a letter (\"i\" by \"!\") to change its color\r\n    if (!loginStatus) {\r\n        $(document).ready(function () {\r\n            const text = $(\"#phrase\").html().replace(/I/, \" <h1 class='letter'> !</h1>\");\r\n            $(\"#phrase\").html(text)\r\n        });\r\n    }\r\n\r\n    //_______________________________Return___________________________________\r\n\r\n    if (!loginStatus) {\r\n        return (\r\n            <div className=\"login\">\r\n                <h1 id=\"phrase\">LOGIN</h1>\r\n                <h1>{loginStatus}</h1>\r\n                <div id=\"name\">\r\n                    <label>Name </label>\r\n                    <input type=\"text\" onChange={(event) => {\r\n                        setName(event.target.value)\r\n                    }}\r\n                    />\r\n                </div>\r\n                <div id=\"password\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\" onChange={(event) => {\r\n                        setPassword(event.target.value)\r\n                    }}\r\n                    />\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <button onClick={login} className=\"raise\">Log in</button>\r\n                    <button onClick={goSignup} className=\"raise\">Sign Up</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (<div>{loginStatus}</div>)\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Logout = () => {\r\n    \r\n    //clear local user info\r\n    localStorage.clear();\r\n    \r\n    let history = useHistory();\r\n    const goLogin = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div className=\"logout\">\r\n            <h1>Goodbye...</h1>\r\n            <div class=\"emoji  emoji--sad\">\r\n                <div class=\"emoji__face\">\r\n                    <div class=\"emoji__eyebrows\"></div>\r\n                    <div class=\"emoji__eyes\"></div>\r\n                    <div class=\"emoji__mouth\"></div>\r\n                </div>\r\n            </div>\r\n            <button onClick={goLogin}>Login</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout;\r\n","import React from 'react';\r\nimport Axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from \"react\";\r\nimport $ from 'jquery';\r\n\r\n\r\n\r\nconst Signup = () => {\r\n\r\n    //______________________________Variables__________________________________\r\n\r\n    let history = useHistory();\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [signUpStatus, setSignUpStatus] = useState('')\r\n\r\n    //______________________________Functions__________________________________\r\n\r\n    const goLogin = () => {\r\n        history.push('/')\r\n    }\r\n    const goSignup = () => {\r\n        history.push('/Signup')\r\n        setSignUpStatus()\r\n    }\r\n\r\n    const addUser = () => {\r\n\r\n        if (name === '') {\r\n            setPassword('')\r\n            setSignUpStatus(\r\n                <div className=\"signup\">\r\n                    <div class=\"emoji  emoji--wow\">\r\n                        <div class=\"emoji__face\">\r\n                            <div class=\"emoji__eyebrows\"></div>\r\n                            <div class=\"emoji__eyes\"></div>\r\n                            <div class=\"emoji__mouth\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <h1>Name cannot be empty !</h1>\r\n                    <button onClick={goSignup}>Try again</button>\r\n                </div>\r\n            )\r\n\r\n        } else if (password === '') {\r\n\r\n            setName('')\r\n            setSignUpStatus(\r\n                <div className=\"signup\">\r\n                    <div class=\"emoji  emoji--wow\">\r\n                        <div class=\"emoji__face\">\r\n                            <div class=\"emoji__eyebrows\"></div>\r\n                            <div class=\"emoji__eyes\"></div>\r\n                            <div class=\"emoji__mouth\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <h1>Password cannot be empty !</h1>\r\n                    <button onClick={goSignup}>Try again</button>\r\n                </div>\r\n            )\r\n\r\n        } else {\r\n\r\n            Axios.post('/apiroutes/create', {\r\n                name: name,\r\n                password: password\r\n            }).then((res) => {\r\n                if (res.data[1]) {\r\n                    setSignUpStatus(\r\n                        <div className=\"signup\">\r\n                            <div class=\"emoji  emoji--yay\">\r\n                                <div class=\"emoji__face\">\r\n                                    <div class=\"emoji__eyebrows\"></div>\r\n                                    <div class=\"emoji__mouth\"></div>\r\n                                </div>\r\n                            </div>\r\n                            <h1>Account created successfully!</h1>\r\n                            <button onClick={goLogin}>Login</button>\r\n                        </div>)\r\n                } else {\r\n                    setSignUpStatus(\r\n                        <div className=\"signup\">\r\n                            <div class=\"emoji  emoji--wow\">\r\n                                <div class=\"emoji__face\">\r\n                                    <div class=\"emoji__eyebrows\"></div>\r\n                                    <div class=\"emoji__eyes\"></div>\r\n                                    <div class=\"emoji__mouth\"></div>\r\n                                </div>\r\n                            </div>\r\n                            <h1>This account already exists !</h1>\r\n                            <button onClick={goLogin}>Login here</button>\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    //replace a letter (\"i\" by \"!\") to change its color\r\n    if (!signUpStatus) {\r\n        $(document).ready(function () {\r\n            const text = $(\"#phrase\").html().replace(/I/, \" <h1 class='letter'> !</h1>\");\r\n            $(\"#phrase\").html(text)\r\n        });\r\n    }\r\n\r\n    //_______________________________Return___________________________________\r\n    if (!signUpStatus) {\r\n        return (\r\n            <>\r\n                <div className=\"signup\">\r\n                    <h1 id=\"phrase\">SIGNUP</h1>\r\n                    <h1>{signUpStatus}</h1>\r\n                    <div id=\"name\">\r\n                        <label>Name </label>\r\n                        <input type=\"text\" onChange={(event) => {\r\n                            setName(event.target.value)\r\n                        }}\r\n                        />\r\n                    </div>\r\n                    <div id=\"password\">\r\n                        <label>Password </label>\r\n                        <input type=\"text\" onChange={(event) => {\r\n                            setPassword(event.target.value)\r\n                        }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <button onClick={addUser}>Create account</button>\r\n                        <button onClick={goLogin}>Login page</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        );\r\n    } else {\r\n        return (<div>{signUpStatus}</div>)\r\n    }\r\n}\r\n\r\nexport default Signup;","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\nimport Navigation from '../components/Navigation';\r\n\r\n\r\nclass Records extends Component {\r\n\r\n    //______________________________Constructor__________________________________\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            topFlappyRecords: [],\r\n            topSnakeRecords: [],\r\n            flappyRecords: [],\r\n            snakeRecords: [],\r\n            showMe: true,\r\n            username: localStorage.getItem(\"username\"),\r\n        }\r\n    }\r\n\r\n\r\n    //________________________________DB Call_________________________________\r\n\r\n    async componentDidMount() {\r\n        //TOP3 records\r\n        //FLAPPY\r\n        const topFlappyRecords =\r\n            await Axios.post('/apiroutes/topGameRecords', {\r\n                game_id: 1 //flappy game_id\r\n            })\r\n        this.setState({ topFlappyRecords: topFlappyRecords.data });        \r\n\r\n        //SNAKE\r\n        const topSnakeRecords =\r\n            await Axios.post('/apiroutes/topGameRecords', {\r\n                game_id: 2 //snake game_id\r\n            })\r\n        this.setState({ topSnakeRecords: topSnakeRecords.data });\r\n\r\n        //All records\r\n        //FLAPPY\r\n        const flappyRecords = await Axios.post('/apiroutes/gameRecords', {\r\n            game_id: 1 //flappy game_id\r\n        })\r\n        this.setState({ flappyRecords: flappyRecords.data });\r\n\r\n        //SNAKE\r\n        const snakeRecords = await Axios.post('/apiroutes/gameRecords', {\r\n            game_id: 2 //snake game_id\r\n        })\r\n        this.setState({ snakeRecords: snakeRecords.data });\r\n    };\r\n\r\n    //_______________________________Render___________________________________\r\n\r\n    render() {\r\n\r\n        //______________________________Variables__________________________________\r\n        // TOP FLAPPY\r\n        const topFlappyRecords = this.state.topFlappyRecords.map((record) => { return record.user_name === this.state.username ? <div className=\"myrow\">{record.record}</div> : <div>{record.record}</div>})\r\n        const topFlappyUsers = this.state.topFlappyRecords.map((record) => { return record.user_name === this.state.username ? <div className=\"myrow\">{record.user_name}</div> : <div>{record.user_name}</div>})\r\n        const topFlappyDate = this.state.topFlappyRecords.map((record) => {\r\n            const cleanDate = new Date(record.updatedAt)\r\n            return record.user_name === this.state.username ? <div className=\"myrow\">{cleanDate.toDateString()}</div> : <div>{cleanDate.toDateString()}</div>}\r\n        )\r\n        // ALL FLAPPY\r\n        const flappyRecords = this.state.flappyRecords.map((record) => { return record.user_name === this.state.username ? <div className=\"myrow\">{record.record}</div> : <div>{record.record}</div>})\r\n        const flappyUsers = this.state.flappyRecords.map((record) => { return record.user_name === this.state.username ? <div className=\"myrow\">{record.user_name}</div> : <div>{record.user_name}</div>})\r\n        const flappyDate = this.state.flappyRecords.map((record) => {\r\n            const cleanDate = new Date(record.updatedAt)\r\n            return record.user_name === this.state.username ? <div className=\"myrow\">{cleanDate.toDateString()}</div> : <div>{cleanDate.toDateString()}</div>}\r\n        )\r\n\r\n        // TOP SNAKE\r\n        const topSnakeRecords = this.state.topSnakeRecords.map((record) => { return record.user_name === this.state.username ? <div className=\"myrow\">{record.record}</div> : <div>{record.record}</div>})\r\n        const topSnakeUsers = this.state.topSnakeRecords.map((record) => { return record.user_name === this.state.username ? <div className=\"myrow\">{record.user_name}</div> : <div>{record.user_name}</div>})\r\n        const topSnakeDate = this.state.topSnakeRecords.map((record) => {\r\n            const cleanDate = new Date(record.updatedAt)\r\n            return record.user_name === this.state.username ? <div className=\"myrow\">{cleanDate.toDateString()}</div> : <div>{cleanDate.toDateString()}</div>}\r\n        )\r\n        // ALL SNAKE\r\n        const snakeRecords = this.state.snakeRecords.map((record) => { return record.user_name === this.state.username ? <div className=\"myrow\">{record.record}</div> : <div>{record.record}</div>})\r\n        const snakeUsers = this.state.snakeRecords.map((record) => { return record.user_name === this.state.username ? <div className=\"myrow\">{record.user_name}</div> : <div>{record.user_name}</div>})\r\n        const snakeDate = this.state.snakeRecords.map((record) => {\r\n            const cleanDate = new Date(record.updatedAt)\r\n            return record.user_name === this.state.username ? <div className=\"myrow\">{cleanDate.toDateString()}</div> : <div>{cleanDate.toDateString()}</div>}\r\n        )\r\n\r\n        const switchState = () => {\r\n            if (this.state.showMe === true) {\r\n                this.setState({ showMe: false });\r\n            } else {\r\n                this.setState({ showMe: true });\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //_______________________________Return___________________________________\r\n\r\n        if (this.state.showMe === true) {\r\n            return (\r\n                <>\r\n                    <Navigation />\r\n                    <div className=\"allrecords\">\r\n                        <a onClick={switchState}><span>All records</span></a>\r\n                        <h1>TOP 5</h1>\r\n                        <div className=\"allgametables\">\r\n                            <div className=\"gametable\">\r\n                                <header><h2>Flappy Holbie</h2></header>\r\n                                <table className=\"recordtable\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Record</th>\r\n                                            <th>User</th>\r\n                                            <th>Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                {topFlappyRecords}\r\n                                            </td>\r\n                                            <td>\r\n                                                {topFlappyUsers}\r\n                                            </td>\r\n                                            <td>\r\n                                                {topFlappyDate}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <div className=\"gametable\">\r\n                                <header><h2>Snake</h2></header>\r\n                                <table className=\"recordtable\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Record</th>\r\n                                            <th>User</th>\r\n                                            <th>Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                {topSnakeRecords}\r\n                                            </td>\r\n                                            <td>\r\n                                                {topSnakeUsers}\r\n                                            </td>\r\n                                            <td>\r\n                                                {topSnakeDate}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n        else if (this.state.showMe === false) {\r\n            return (\r\n                <>\r\n                    <Navigation />\r\n                    <div className=\"allrecords\">\r\n                        <a onClick={switchState}><span>Top3</span></a>\r\n                        <h1>All records</h1>\r\n                        <div className=\"allgametables\">\r\n                            <div className=\"gametable\">\r\n                                <header><h2>Flappy Holbie</h2></header>\r\n                                <table className=\"recordtable\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Record</th>\r\n                                            <th>User</th>\r\n                                            <th>Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                {flappyRecords}\r\n                                            </td>\r\n                                            <td>\r\n                                                {flappyUsers}\r\n                                            </td>\r\n                                            <td>\r\n                                                {flappyDate}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <div className=\"gametable\">\r\n                                <header><h2>Snake</h2></header>\r\n                                <table className=\"recordtable\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Record</th>\r\n                                            <th>User</th>\r\n                                            <th>Date</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                {snakeRecords}\r\n                                            </td>\r\n                                            <td>\r\n                                                {snakeUsers}\r\n                                            </td>\r\n                                            <td>\r\n                                                {snakeDate}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Records;\r\n/*\r\nsmash button\r\n______________________________________________________________________________html:\r\n\r\n<button class=\"button\">\r\n                            <div class=\"inner\">\r\n                                <div class=\"icon\">\r\n                                    <div class=\"person\">\r\n                                        <div class=\"arm\"></div>\r\n                                        <div class=\"arm right\"></div>\r\n                                        <div class=\"leg\"></div>\r\n                                        <div class=\"leg right\"></div>\r\n                                    </div>\r\n                                    <div class=\"weight\"></div>\r\n                                </div>\r\n                                <div class=\"text\">\r\n                                    <span>Smash to submit</span>\r\n                                    <span>Yaay! Submitted.</span>\r\n                                </div>\r\n                            </div>\r\n                        </button>\r\n__________________________________________________________________________________________________________js:\r\n\r\nlet confettiAmount = 100,\r\n            confettiColors = [\r\n                '#7d32f5',\r\n                '#f6e434',\r\n                '#63fdf1',\r\n                '#e672da',\r\n                '#295dfe',\r\n                '#6e57ff'\r\n            ],\r\n            random = (min, max) => {\r\n                return Math.floor(Math.random() * (max - min + 1) + min);\r\n            },\r\n            createConfetti = to => {\r\n                let elem = document.createElement('i'),\r\n                    set = Math.random() < 0.5 ? -1 : 1;\r\n                elem.style.setProperty('--x', random(-360, 360) + 'px');\r\n                elem.style.setProperty('--y', random(-200, 200) + 'px');\r\n                elem.style.setProperty('--r', random(0, 360) + 'deg');\r\n                elem.style.setProperty('--s', random(.6, 1));\r\n                elem.style.setProperty('--b', confettiColors[random(0, 5)]);\r\n                to.appendChild(elem);\r\n            };\r\n\r\n        document.querySelectorAll('.button').forEach(button => {\r\n\r\n            let complete = false,\r\n                timeline = gsap.timeline({\r\n                    paused: true,\r\n                    ease: 'none',\r\n                    onComplete() {\r\n                        complete = true;\r\n                        button.classList.add('complete');\r\n                        for (let i = 0; i < confettiAmount; i++) {\r\n                            createConfetti(button);\r\n                        }\r\n                        setTimeout(() => {\r\n                            button.classList.add('confetti');\r\n                            setTimeout(() => button.querySelectorAll('i').forEach(i => i.remove()), 600);\r\n                        }, 300);\r\n                        // Reset\r\n                        setTimeout(() => {\r\n                            button.classList.remove('complete', 'confetti');\r\n                            complete = false;\r\n                        }, 2000);\r\n                    }\r\n                }),\r\n                up = 0;\r\n\r\n            timeline.to(button, {\r\n                keyframes: [{\r\n                    '--weight-y': -6,\r\n                    '--arm-rotate-s-x': 90,\r\n                    duration: .3\r\n                }, {\r\n                    '--weight-y': -10,\r\n                    '--arm-rotate-s-x': 45,\r\n                    '--arm-rotate-s': 130,\r\n                    duration: .2\r\n                }, {\r\n                    '--weight-y': -12,\r\n                    '--arm-rotate-s': 130,\r\n                    '--arm-rotate-s-x': 0,\r\n                    duration: .1\r\n                }, {\r\n                    '--weight-y': -20,\r\n                    '--person-y': -4,\r\n                    '--arm-rotate': 100,\r\n                    '--arm-rotate-s': 90,\r\n                    '--leg-y': 0,\r\n                    '--leg-rotate': 20,\r\n                    '--leg-rotate-s': -20,\r\n                    duration: .2\r\n                }, {\r\n                    '--weight-y': -25,\r\n                    '--arm-rotate': 150,\r\n                    '--arm-rotate-s': 30,\r\n                    duration: .2\r\n                }]\r\n            });\r\n\r\n            button.addEventListener('click', e => {\r\n\r\n                up = 1;\r\n\r\n                const rippleDiv = document.createElement('div');\r\n\r\n                rippleDiv.className = 'ripple';\r\n\r\n                const boundingClientRect = button.getBoundingClientRect();\r\n\r\n                button.style.setProperty('--ripple-x', e.clientX - boundingClientRect.left);\r\n                button.style.setProperty('--ripple-y', e.clientY - boundingClientRect.top);\r\n\r\n                button.querySelector('.inner').appendChild(rippleDiv);\r\n\r\n                setTimeout(() => rippleDiv.remove(), 500);\r\n\r\n            });\r\n\r\n            setInterval(() => {\r\n\r\n                up = up > 0 ? up - .1 : 0;\r\n\r\n                let progress = timeline.progress(),\r\n                    direction = up > 0 ? 1 : -1.5;\r\n\r\n                if (!complete) {\r\n                    timeline.progress(progress + .01 * direction);\r\n                }\r\n\r\n            }, 1000 / 60);\r\n\r\n        });\r\n\r\n________________________________________________________________________________________________________css:\r\n\r\n.button {\r\n    --color                    : #F6F8FF;\r\n    --background               : #171827;\r\n    --background-hover         : #0D0F18;\r\n    --shadow                   : #{rgba(#00093D, .12)};\r\n    --person                   : #F6F8FF;\r\n    --person-arm               : var(--person);\r\n    --person-leg               : #D1D6EE;\r\n    --weight                   : #e85d04;\r\n    --weight-disk              : #FFBA08;\r\n    //\r\n    --person-y                 : 0;\r\n    --weight-y                 : 0;\r\n    --arm-rotate               : 40;\r\n    --arm-rotate-s             : -40;\r\n    --arm-rotate-s-x           : 0;\r\n    --leg-y                    : -2;\r\n    --leg-rotate               : 45;\r\n    --leg-rotate-s             : -70;\r\n    display                    : table;\r\n    outline                    : none;\r\n    border                     : none;\r\n    background                 : none;\r\n    padding                    : 0;\r\n    position                   : relative;\r\n    cursor                     : pointer;\r\n    line-height                : 24px;\r\n    font-family                : inherit;\r\n    font-size                  : 14px;\r\n    font-weight                : 600;\r\n    -webkit-appearance         : none;\r\n    -webkit-tap-highlight-color: transparent;\r\n\r\n    .inner {\r\n        padding      : 14px 20px;\r\n        transition   : transform .2s, background .4s;\r\n        color        : var(--color);\r\n        position     : relative;\r\n        display      : flex;\r\n        z-index      : 1;\r\n        min-width    : 190px;\r\n        border-radius: 13px;\r\n        background   : var(--b, var(--background));\r\n        box-shadow   : 0 1px 3px var(--shadow), 0 3px 7px var(--shadow);\r\n        transform    : scale(var(--scale, 1)) translateZ(0);\r\n\r\n        &:active {\r\n            --scale: .95;\r\n        }\r\n\r\n        &:hover {\r\n            --b: var(--background-hover);\r\n        }\r\n    }\r\n\r\n    .icon {\r\n        width       : 24px;\r\n        height      : 24px;\r\n        margin-right: 12px;\r\n        display     : block;\r\n        position    : relative;\r\n\r\n        .person,\r\n        .weight {\r\n            position: absolute;\r\n        }\r\n\r\n        .person {\r\n            top      : 7px;\r\n            left     : 9px;\r\n            width    : 6px;\r\n            height   : 10px;\r\n            transform: translateY(calc(var(--person-y) * 1px));\r\n\r\n            &:before,\r\n            &:after {\r\n                content : '';\r\n                position: absolute;\r\n                left    : 0;\r\n            }\r\n\r\n            &:before {\r\n                top             : -5px;\r\n                width           : 6px;\r\n                height          : 6px;\r\n                border-radius   : 50%;\r\n                background      : var(--person);\r\n                transform       : scale(.7);\r\n                transform-origin: 50% 25%;\r\n            }\r\n\r\n            &:after {\r\n                top          : 0;\r\n                right        : 0;\r\n                bottom       : 0;\r\n                z-index      : 1;\r\n                border-radius: 2px 2px 3px 3px;\r\n                background   : var(--person);\r\n            }\r\n\r\n            .arm,\r\n            .leg {\r\n                position        : absolute;\r\n                left            : var(--left, 0);\r\n                top             : var(--top, 0);\r\n                width           : 2px;\r\n                height          : 7px;\r\n                border-radius   : 1px;\r\n                transform-origin: 1px 1px;\r\n                background      : var(--background);\r\n                transform       : translate(calc(var(--x, 0) * 1px), calc(var(--y, 0) * 1px)) rotateZ(calc(var(--rotate, 0) * 1deg));\r\n\r\n                &:before {\r\n                    content         : '';\r\n                    position        : absolute;\r\n                    left            : 0;\r\n                    top             : 5px;\r\n                    width           : 2px;\r\n                    height          : 7px;\r\n                    border-radius   : 1px;\r\n                    transform-origin: 1px 1px;\r\n                    background      : inherit;\r\n                    transform       : rotateZ(calc(var(--rotate-s, 0) * 1deg)) rotateX(calc(var(--rotate-s-x, 0) * 1deg));\r\n                }\r\n\r\n                &.right {\r\n                    --left   : 4px;\r\n                    transform: translate(calc(var(--x, 0) * -1px), calc(var(--y, 0) * 1px)) rotateZ(calc(var(--rotate, 0) * -1deg));\r\n\r\n                    &:before {\r\n                        transform: rotateZ(calc(var(--rotate-s, 0) * -1deg)) rotateX(calc(var(--rotate-s-x, 0) * 1deg));\r\n                    }\r\n                }\r\n            }\r\n\r\n            .arm {\r\n                --background: var(--person-arm);\r\n                --rotate    : var(--arm-rotate);\r\n                --rotate-s  : var(--arm-rotate-s);\r\n                --rotate-s-x: var(--arm-rotate-s-x);\r\n                z-index     : 1;\r\n            }\r\n\r\n            .leg {\r\n                --top       : 8px;\r\n                --background: var(--person-leg);\r\n                --y         : var(--leg-y);\r\n                --rotate    : var(--leg-rotate);\r\n                --rotate-s  : var(--leg-rotate-s);\r\n            }\r\n        }\r\n\r\n        .weight {\r\n            top          : 17px;\r\n            left         : 0;\r\n            width        : 24px;\r\n            height       : 2px;\r\n            border-radius: 1px;\r\n            background   : var(--weight);\r\n            transform    : translateY(calc(var(--weight-y, 0) * 1px));\r\n\r\n            &:before,\r\n            &:after {\r\n                content      : '';\r\n                position     : absolute;\r\n                border-radius: 1px;\r\n                left         : var(--l, 1px);\r\n                top          : var(--t, -2px);\r\n                width        : var(--w, 2px);\r\n                height       : var(--h, 6px);\r\n                background   : var(--weight-disk);\r\n                box-shadow   : var(--bx, 20px) 0 0 var(--weight-disk);\r\n            }\r\n\r\n            &:after {\r\n                --l : 3px;\r\n                --t : -3px;\r\n                --h : 8px;\r\n                --bx: 16px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .text {\r\n        position: relative;\r\n\r\n        span {\r\n            display    : block;\r\n            white-space: nowrap;\r\n            opacity    : var(--o, 1);\r\n            transform  : translateX(var(--x, 0));\r\n            transition : transform .3s, opacity .2s;\r\n\r\n            &:last-child {\r\n                --o     : 0;\r\n                --x     : 8px;\r\n                position: absolute;\r\n                left    : 0;\r\n                top     : 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    .ripple {\r\n        position      : absolute;\r\n        top           : 0;\r\n        left          : 0;\r\n        width         : 100%;\r\n        height        : 100%;\r\n        overflow      : hidden;\r\n        border-radius : inherit;\r\n        pointer-events: none;\r\n\r\n        &:before {\r\n            content       : '';\r\n            position      : absolute;\r\n            top           : calc(var(--ripple-y, 0) * 1px);\r\n            left          : calc(var(--ripple-x, 0) * 1px);\r\n            transform     : translate(-50%, -50%) scale(0);\r\n            opacity       : 0;\r\n            width         : 200%;\r\n            padding-bottom: 200%;\r\n            border-radius : 50%;\r\n            background    : currentColor;\r\n            animation     : ripple .5s ease-in;\r\n        }\r\n    }\r\n\r\n    i {\r\n        position  : absolute;\r\n        display   : block;\r\n        width     : 4px;\r\n        height    : 4px;\r\n        top       : 50%;\r\n        left      : 50%;\r\n        margin    : -2px 0 0 -2px;\r\n        opacity   : var(--o, 0);\r\n        background: var(--b);\r\n        transform : translate(var(--x), var(--y)) scale(var(--s, 1));\r\n    }\r\n\r\n    &.complete {\r\n        .text {\r\n            span {\r\n                &:first-child {\r\n                    --o: 0;\r\n                    --x: -8px;\r\n                }\r\n\r\n                &:last-child {\r\n                    --o: 1;\r\n                    --x: 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        &.confetti {\r\n            i {\r\n                animation: confetti .6s ease-out forwards;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@keyframes confetti {\r\n    from {\r\n        transform: translate(0, 0);\r\n        opacity  : 1;\r\n    }\r\n}\r\n\r\n@keyframes ripple {\r\n    25% {\r\n        opacity: .07;\r\n    }\r\n\r\n    100% {\r\n        transform: translate(-50%, -50%) scale(1);\r\n    }\r\n}*/","import React from 'react';\r\nimport Axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Navigation from '../components/Navigation';\r\n\r\n\r\n\r\nconst Games = () => {\r\n\r\n    //______________________________Variables__________________________________\r\n\r\n    let history = useHistory();\r\n\r\n    //______________________________Functions__________________________________\r\n\r\n    // SetLocalStorage of game info (create row if not exist)\r\n    const goFlappy = () => {\r\n        const id = 1\r\n        const name = \"FlappyHolbie\"\r\n        localStorage.setItem(\"gameid\", id)\r\n        localStorage.setItem(\"gamename\", name)\r\n\r\n        Axios.put('/apiroutes/addGame', {\r\n            name: name,\r\n            id: id\r\n        })\r\n\r\n        history.push('/Flappy')\r\n    }\r\n\r\n    // SetLocalStorage of game info (create row if not exist)\r\n    const goSnake = () => {\r\n        const id = 2\r\n        const name = \"Snake\"\r\n        localStorage.setItem(\"gameid\", id)\r\n        localStorage.setItem(\"gamename\", name)\r\n\r\n        Axios.put('/apiroutes/addGame', {\r\n            name: name,\r\n            id: id\r\n        })\r\n\r\n        history.push('/Snake')\r\n    }\r\n\r\n    // Load all personnal records into localstorage\r\n    Axios.post('/apiroutes/getRecords', {\r\n        user_id: localStorage.getItem(\"userid\"),\r\n    }).then((response) => {\r\n        if (response.data[0]) localStorage.setItem(\"record\", JSON.stringify(response.data));\r\n        else localStorage.setItem(\"record\", 0);\r\n    })\r\n\r\n    //_______________________________Return___________________________________\r\n\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <div className=\"games\">\r\n                <div className=\"game\">\r\n                    <div className=\"holbie img\"></div>\r\n                    <h2>Flappy Holbie</h2>\r\n                    <p>Similar to the famous Flappy bird game, you need to get through pipe holes as much as possible with simple clicks to make your holbie fly !</p>\r\n                    <p className=\"devicegreen\">Smartphone/Tablet</p>\r\n                    <a href=\"\" onClick={goFlappy}><span>Play</span></a>\r\n                </div>\r\n                <div className=\"game\">\r\n                    <div className=\"snake img\"></div>\r\n                    <h2>Snake</h2>\r\n                    <p>Similar to the famous Nokia 3310 snake game, the goal is to get as much food as possible while trying to not eating your tail that grows as you get fed.</p>\r\n                    <p className=\"devicered\">Smartphone/Tablet</p>\r\n                    <a href=\"\" onClick={goSnake}><span>Play</span></a>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Games;","export default __webpack_public_path__ + \"static/media/pipebot.3e2ae315.png\";","export default __webpack_public_path__ + \"static/media/pipetop.b923fb22.png\";","export default __webpack_public_path__ + \"static/media/holbie.90a81d31.png\";","import Axios from 'axios';\r\nimport Phaser from \"phaser\";\r\nimport pipebot from './assets/images/pipebot.png';\r\nimport pipetop from './assets/images/pipetop.png';\r\nimport holbie from './assets/images/holbie.png';\r\n\r\n\r\nconst gameOptions = {\r\n\r\n    // bird gravity, will make bird fall if you dont flap\r\n    birdGravity: 900,\r\n\r\n    // horizontal bird speed\r\n    birdSpeed: 150,\r\n\r\n    // flap thrust\r\n    birdFlapPower: 300,\r\n\r\n    // minimum pipe height, in pixels. Affects hole position\r\n    minPipeHeight: 30,\r\n\r\n    // distance range from next pipe, in pixels\r\n    pipeDistance: [220, 280],\r\n\r\n    // hole range between pipes, in pixels\r\n    pipeHole: [210, 230],\r\n\r\n    //highscore variable\r\n    topScore: 0,\r\n};\r\n\r\n// Check for previous record\r\nfunction getRecord() {\r\n    Axios.post('/apiroutes/getRecord', {\r\n        user_id: localStorage.getItem(\"userid\"),\r\n        game_id: localStorage.getItem(\"gameid\"),\r\n    }).then((response) => {\r\n        if (response.data[0]) gameOptions.topScore = response.data[0].record\r\n    })\r\n}\r\n\r\nclass flappy extends Phaser.Scene {\r\n\r\n    constructor() {\r\n        super('flappy');\r\n        getRecord()\r\n    }\r\n\r\n    //_______________________________Preload___________________________________\r\n\r\n    preload() {\r\n        this.load.image('bird', holbie);\r\n        this.load.image('pipebot', pipebot);\r\n        this.load.image('pipetop', pipetop);\r\n    }\r\n\r\n    //_______________________________Create___________________________________\r\n\r\n    create() {\r\n        this.pipeGroup = this.physics.add.group();\r\n        this.pipePool = [];\r\n        for (let i = 0; i < 5; i++) {\r\n            this.pipePool.push(this.pipeGroup.create(0, 0, 'pipetop').setScale(1, 1.5));\r\n            this.pipePool.push(this.pipeGroup.create(0, 0, 'pipebot').setScale(1, 1.5));\r\n            this.placePipes(false);\r\n        }\r\n        this.pipeGroup.setVelocityX(-gameOptions.birdSpeed);\r\n        this.bird = this.physics.add.sprite(80, this.sys.game.canvas.height / 2, 'bird').setScale(0.5);\r\n        this.bird.body.gravity.y = gameOptions.birdGravity;\r\n        this.input.on('pointerdown', this.flap, this);\r\n        this.score = 0;\r\n        this.scoreText = this.add.text(10, 10, '');\r\n        this.updateScore(this.score);\r\n    }\r\n\r\n    updateScore(inc) {\r\n        this.score += inc;\r\n        this.scoreText.text = 'Score: ' + this.score + '\\nRecord: ' + gameOptions.topScore;\r\n    }\r\n\r\n    placePipes(addScore) {\r\n        let rightmost = this.getRightmostPipe();\r\n        let pipeHoleHeight = Phaser.Math.Between(gameOptions.pipeHole[0], gameOptions.pipeHole[1]);\r\n        let pipeHolePosition = Phaser.Math.Between(gameOptions.minPipeHeight + pipeHoleHeight / 2, this.sys.game.canvas.height - gameOptions.minPipeHeight - pipeHoleHeight / 2);\r\n        this.pipePool[0].x = rightmost + this.pipePool[0].getBounds().width + Phaser.Math.Between(gameOptions.pipeDistance[0], gameOptions.pipeDistance[1]);\r\n        this.pipePool[0].y = pipeHolePosition - pipeHoleHeight / 2;\r\n        this.pipePool[0].setOrigin(0, 1);\r\n        this.pipePool[1].x = this.pipePool[0].x;\r\n        this.pipePool[1].y = pipeHolePosition + pipeHoleHeight / 2;\r\n        this.pipePool[1].setOrigin(0, 0);\r\n        this.pipePool = [];\r\n        if (addScore) {\r\n            this.updateScore(1);\r\n        }\r\n    }\r\n\r\n    flap() {\r\n        this.bird.body.velocity.y = -gameOptions.birdFlapPower;\r\n    }\r\n\r\n    getRightmostPipe() {\r\n        let rightmostPipe = 0;\r\n        this.pipeGroup.getChildren().forEach(function (pipe) {\r\n            rightmostPipe = Math.max(rightmostPipe, pipe.x);\r\n        });\r\n        return rightmostPipe;\r\n    }\r\n\r\n    //_______________________________Update___________________________________\r\n\r\n    update() {\r\n        if (this.bird.angle < 20) {\r\n            this.bird.angle += 0.6\r\n        }\r\n        if (this.input.activePointer.buttons && this.bird.angle > -30) {\r\n            this.bird.angle -= 5\r\n        }\r\n        this.physics.world.collide(this.bird, this.pipeGroup, function () {\r\n            this.die();\r\n        }, null, this);\r\n        if (this.bird.y > this.sys.game.canvas.height || this.bird.y < 0) {\r\n            this.die();\r\n        }\r\n        this.pipeGroup.getChildren().forEach(function (pipe) {\r\n            if (pipe.getBounds().right < 0) {\r\n                this.pipePool.push(pipe);\r\n                if (this.pipePool.length === 2) {\r\n                    this.placePipes(true);\r\n                }\r\n            }\r\n        }, this)\r\n    }\r\n\r\n    die() {\r\n        gameOptions.topScore = Math.max(this.score, gameOptions.topScore);\r\n        const record = gameOptions.topScore\r\n        // POST/PUT record in database\r\n        Axios.put('/apiroutes/addRecord', {\r\n            record: record,\r\n            user_id: localStorage.getItem(\"userid\"),\r\n            user_name: localStorage.getItem(\"username\"),\r\n            game_id: localStorage.getItem(\"gameid\"),\r\n            game_name: localStorage.getItem(\"gamename\")\r\n        }).then(() => {\r\n            console.log(\"Insertion success\");\r\n        })\r\n        \r\n        this.scene.start('flappystart');\r\n    }\r\n}\r\n\r\nexport default flappy;","import Axios from 'axios';\r\nimport foodimage from './assets/images/food.png'\r\nimport body from './assets/images/body.png'\r\nimport head from './assets/images/head.png'\r\nimport grass from './assets/images/grass.png'\r\nimport Phaser from \"phaser\";\r\n\r\n\r\n//______________________________Variables__________________________________\r\n\r\nlet snake;\r\nlet food;\r\nlet cursors;\r\nlet Record;\r\n\r\nlet UP = 0;\r\nlet DOWN = 1;\r\nlet LEFT = 2;\r\nlet RIGHT = 3;\r\n\r\n\r\n// Check for previous record\r\nfunction getRecord() {\r\n    Axios.post('/apiroutes/getRecord', {\r\n        user_id: localStorage.getItem(\"userid\"),\r\n        game_id: localStorage.getItem(\"gameid\"),\r\n    }).then((response) => {\r\n        if (response.data[0]) Record = response.data[0].record\r\n        else Record = localStorage.getItem(\"snakerecord\") ? localStorage.getItem(\"snakerecord\") : 0\r\n    })\r\n}\r\n\r\nclass snakegame extends Phaser.Scene {\r\n\r\n    constructor() {\r\n        super('snakegame');\r\n        getRecord()\r\n    }\r\n\r\n    //_______________________________Preload___________________________________\r\n\r\n    preload() {\r\n        this.load.image('food', foodimage);\r\n        this.load.image('body', body);\r\n        this.load.image('head', head);\r\n        this.load.image('grass', grass);\r\n    }\r\n\r\n    //_______________________________Create___________________________________\r\n\r\n    create() {\r\n\r\n        this.add.image(320, 260, 'grass').setScale(1);\r\n        this.scoreText = this.add.text(10, 10, \"h\", { fontFamily: 'Georgia, \"Goudy Bookletter 1911\", Times, serif', fontSize: '30px', color: '#000' });\r\n\r\n        //Food object\r\n        let Food = new Phaser.Class({\r\n\r\n            Extends: Phaser.GameObjects.Image,\r\n\r\n            initialize:\r\n\r\n                function Food(scene, x, y) {\r\n                    Phaser.GameObjects.Image.call(this, scene)\r\n\r\n                    this.setTexture('food');\r\n                    this.setPosition(x * 16, y * 16);\r\n                    this.setOrigin(0);\r\n\r\n                    this.total = 0;\r\n\r\n                    scene.children.add(this);\r\n                },\r\n\r\n            eat: function () {\r\n                this.total++;\r\n                \r\n            }\r\n            \r\n        });\r\n        \r\n        //Snake object\r\n        let Snake = new Phaser.Class({\r\n            \r\n            initialize:\r\n            \r\n            function Snake(scene, x, y) {\r\n                this.headPosition = new Phaser.Geom.Point(x, y);\r\n                \r\n                this.body = scene.add.group();\r\n\r\n                this.head = this.body.create(x * 16, y * 16, 'head').setScale(0.15).setDepth(1);\r\n                    this.head.setOrigin(0);\r\n                    \r\n                    this.alive = true;\r\n                    \r\n                    this.speed = 100;\r\n                    \r\n                    this.moveTime = 0;\r\n                    \r\n                    this.tail = new Phaser.Geom.Point(x, y);\r\n                    \r\n                    this.heading = RIGHT;\r\n                    this.direction = RIGHT;\r\n                },\r\n                \r\n                update: function (time) {\r\n                    if (time >= this.moveTime) {\r\n                        return this.move(time);\r\n                    }\r\n                },\r\n                \r\n            faceLeft: function () {\r\n                if (this.direction === UP || this.direction === DOWN) {\r\n                    this.heading = LEFT;\r\n                }\r\n            },\r\n\r\n            faceRight: function () {\r\n                if (this.direction === UP || this.direction === DOWN) {\r\n                    this.heading = RIGHT;\r\n                }\r\n            },\r\n\r\n            faceUp: function () {\r\n                if (this.direction === LEFT || this.direction === RIGHT) {\r\n                    this.heading = UP;\r\n                }\r\n            },\r\n\r\n            faceDown: function () {\r\n                if (this.direction === LEFT || this.direction === RIGHT) {\r\n                    this.heading = DOWN;\r\n                }\r\n            },\r\n\r\n            move: function (time) {\r\n                /**\r\n                * Based on the heading property (which is the direction the pgroup pressed)\r\n                * we update the headPosition value accordingly.\r\n                * \r\n                * The Math.wrap call allow the snake to wrap around the screen, so when\r\n                * it goes off any of the sides it re-appears on the other.\r\n                */\r\n                switch (this.heading) {\r\n                    case LEFT:\r\n                        this.headPosition.x = Phaser.Math.Wrap(this.headPosition.x - 1, 0, 40);\r\n                        break;\r\n\r\n                    case RIGHT:\r\n                        this.headPosition.x = Phaser.Math.Wrap(this.headPosition.x + 1, 0, 40);\r\n                        break;\r\n\r\n                    case UP:\r\n                        this.headPosition.y = Phaser.Math.Wrap(this.headPosition.y - 1, 0, 30);\r\n                        break;\r\n\r\n                    case DOWN:\r\n                        this.headPosition.y = Phaser.Math.Wrap(this.headPosition.y + 1, 0, 30);\r\n                        break;\r\n                }\r\n\r\n                this.direction = this.heading;\r\n\r\n                //  Update the body segments and place the last coordinate into this.tail\r\n                Phaser.Actions.ShiftPosition(this.body.getChildren(), this.headPosition.x * 16, this.headPosition.y * 16, 1, this.tail);\r\n\r\n                //  Check to see if any of the body pieces have the same x/y as the head\r\n                //  If they do, the head ran into the body\r\n\r\n                let hitBody = Phaser.Actions.GetFirst(this.body.getChildren(), { x: this.head.x, y: this.head.y }, 1);\r\n\r\n                if (hitBody) {\r\n                    console.log('dead');\r\n\r\n                    this.alive = false;\r\n\r\n                    return false;\r\n                }\r\n                else {\r\n                    //  Update the timer ready for the next movement\r\n                    this.moveTime = time + this.speed;\r\n\r\n                    return true;\r\n                }\r\n            },\r\n\r\n            grow: function () {\r\n                let newPart = this.body.create(this.tail.x, this.tail.y, 'body').setScale(0.15);\r\n\r\n                newPart.setOrigin(0);\r\n            },\r\n\r\n            collideWithFood: function (food) {\r\n                if (this.head.x === food.x && this.head.y === food.y) {\r\n                    this.grow();\r\n\r\n                    food.eat();\r\n\r\n                    //  every 5 food (from 20), increase the snake speed\r\n                    if (this.speed > 20 && food.total % 5 === 0) {\r\n                        this.speed -= 5;\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            },\r\n\r\n            updateGrid: function (grid) {\r\n                //  Remove all body pieces from valid positions list\r\n                this.body.children.each(function (segment) {\r\n\r\n                    let bx = segment.x / 16;\r\n                    let by = segment.y / 16;\r\n\r\n                    grid[by][bx] = false;\r\n\r\n                });\r\n\r\n                return grid;\r\n            }\r\n\r\n        });\r\n\r\n        food = new Food(this, 3, 4).setScale(0.15);\r\n        snake = new Snake(this, 8, 8);\r\n\r\n        //  Create keyboard controls\r\n        cursors = this.input.keyboard.createCursorKeys();\r\n    }\r\n\r\n    //_______________________________Update___________________________________\r\n\r\n    update(time, delta) {\r\n        this.scoreText.text = 'Score: ' + food.total + '\\nRecord: ' + Record\r\n\r\n        if (!snake.alive) {\r\n            const record = food.total;\r\n            localStorage.setItem(\"snakerecord\", record)\r\n\r\n            // POST/PUT record in database\r\n            Axios.put('/apiroutes/addRecord', {\r\n                record: record,\r\n                user_id: localStorage.getItem(\"userid\"),\r\n                user_name: localStorage.getItem(\"username\"),\r\n                game_id: localStorage.getItem(\"gameid\"),\r\n                game_name: localStorage.getItem(\"gamename\")\r\n            }).then(() => {\r\n                console.log(\"Insertion success\");\r\n            })\r\n\r\n            this.scene.start('snakestart');\r\n            return;\r\n        }\r\n\r\n        /**\r\n        * Check which key is pressed, and then change the direction the snake\r\n        * is heading based on that. The checks ensure you don't double-back\r\n        * on yourself, for example if you're moving to the right and you press\r\n        * the LEFT cursor, it ignores it, because the only valid directions you\r\n        * can move in at that time is up and down.\r\n        */\r\n        if (cursors.left.isDown) {\r\n            snake.faceLeft();\r\n        }\r\n        else if (cursors.right.isDown) {\r\n            snake.faceRight();\r\n        }\r\n        else if (cursors.up.isDown) {\r\n            snake.faceUp();\r\n        }\r\n        else if (cursors.down.isDown) {\r\n            snake.faceDown();\r\n        }\r\n\r\n        if (snake.update(time)) {\r\n            //  If the snake updated, we need to check for collision against food\r\n            if (snake.collideWithFood(food)) {\r\n                repositionFood();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction repositionFood() {\r\n    //  First create an array that assumes all positions\r\n    //  are valid for the new piece of food\r\n\r\n    //  A Grid we'll use to reposition the food each time it's eaten\r\n    let testGrid = [];\r\n\r\n    for (let y = 0; y < 30; y++) {\r\n        testGrid[y] = [];\r\n\r\n        for (let x = 0; x < 40; x++) {\r\n            testGrid[y][x] = true;\r\n        }\r\n    }\r\n\r\n    snake.updateGrid(testGrid);\r\n\r\n    //  Purge out false positions\r\n    let validLocations = [];\r\n\r\n    for (let y = 0; y < 30; y++) {\r\n        for (let x = 0; x < 40; x++) {\r\n            if (testGrid[y][x] === true) {\r\n                //  Is this position valid for food? If so, add it here ...\r\n                validLocations.push({ x: x, y: y });\r\n            }\r\n        }\r\n    }\r\n\r\n    if (validLocations.length > 0) {\r\n        //  Use the RNG to pick a random food position\r\n        let pos = Phaser.Math.RND.pick(validLocations);\r\n\r\n        //  And place it\r\n        food.setPosition(pos.x * 16, pos.y * 16);\r\n\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default snakegame;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Game = () => {\r\n    \r\n    //______________________________Variables__________________________________\r\n\r\n    let history = useHistory();\r\n\r\n    //______________________________Functions__________________________________\r\n\r\n    const goHome = () => {\r\n        history.push('/Home')\r\n    }\r\n    const goGames = () => {\r\n        history.push('/Games')\r\n    }\r\n\r\n    //_______________________________Return___________________________________\r\n\r\n    return (\r\n        <>\r\n            <div className=\"gamenav\">\r\n                <button onClick={goHome} className=\"raise\">Home</button>\r\n                <button onClick={goGames} className=\"raise\">Games</button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Game;","import Phaser from \"phaser\";\r\nimport holbie from './assets/images/holbie.png';\r\n\r\n\r\nclass flappystart extends Phaser.Scene {\r\n    \r\n    constructor() {\r\n        super('flappystart');\r\n    }\r\n\r\n    preload() {\r\n        this.load.image('bird', holbie);\r\n    }\r\n\r\n    clickToStart() {\r\n        this.scene.start('flappy');\r\n    }\r\n\r\n    create() {\r\n        this.add.text(this.sys.game.canvas.width/3 , this.sys.game.canvas.height/3 - 100, 'Flappy Holbie', { font: '5em Arial black' });\r\n        this.add.text(this.sys.game.canvas.width/3 , this.sys.game.canvas.height/3 , 'CLICK TO START', { font: '5em Arial black' });\r\n        this.bird = this.physics.add.sprite(80, this.sys.game.canvas.height / 2, 'bird').setScale(0.5);\r\n        this.input.on('pointerdown', this.clickToStart, this);\r\n    }\r\n}\r\n\r\nexport default flappystart;","import React, { Component } from 'react';\r\nimport Phaser from 'phaser';\r\nimport { IonPhaser } from '@ion-phaser/react';\r\nimport flappy from '../phaser/flappyCode';\r\nimport Game from '../components/Game';\r\nimport flappystart from '../phaser/flappyStart';\r\n\r\n\r\nclass PhaserGame extends Component {\r\n    state = {\r\n        initialize: true,\r\n        game: {\r\n            width: \"100vw\",\r\n            height: \"80vh\",\r\n            type: Phaser.AUTO,\r\n            backgroundColor: 0x87ceeb,\r\n            physics: {\r\n                default: 'arcade',\r\n                arcade: {\r\n                    gravity: { y: 0 },\r\n                    debug: false\r\n                }\r\n            },\r\n            scene: [flappystart, flappy]\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { initialize, game } = this.state\r\n        return (\r\n            <div>\r\n                <div className=\"phaser\">\r\n                    <Game />\r\n                    <IonPhaser game={game} initialize={initialize} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PhaserGame;","export default __webpack_public_path__ + \"static/media/food.61b96990.png\";","export default __webpack_public_path__ + \"static/media/body.202fc326.png\";","export default __webpack_public_path__ + \"static/media/head.8dec8bbf.png\";","export default __webpack_public_path__ + \"static/media/grass.90e2e697.png\";","import Phaser from \"phaser\";\r\nimport head from './assets/images/head.png';\r\nimport grass from './assets/images/grass.png'\r\n\r\n\r\nclass snakestart extends Phaser.Scene {\r\n\r\n    constructor() {\r\n        super('snakestart');\r\n    }\r\n\r\n    preload() {\r\n        this.load.image('head', head);\r\n        this.load.image('grass', grass);\r\n    }\r\n\r\n    clickToStart() {\r\n        this.scene.start('snakegame');\r\n    }\r\n\r\n    create() {\r\n        this.add.image(320, 260, 'grass').setScale(1);\r\n        this.add.text(280, 200 - 100, 'Snake', { font: '5em Arial black', color: '#000' });\r\n        this.add.text(100, 240, 'CLICK TO START', { font: '5em Arial black', color: '#000' });\r\n        this.add.image(150, 130, 'head').setScale(0.5);\r\n        this.input.on('pointerdown', this.clickToStart, this);\r\n    }\r\n}\r\n\r\nexport default snakestart;","import Phaser from 'phaser'\r\nimport React, { Component } from 'react'\r\nimport { IonPhaser } from '@ion-phaser/react'\r\nimport snakegame from '../phaser/snakeCode'\r\nimport snakestart from '../phaser/snakeStart'\r\nimport Game from '../components/Game';\r\n\r\n\r\nclass PhaserGame extends Component {\r\n    state = {\r\n        initialize: true,\r\n        game: {\r\n            width: 640,\r\n            height: 480,\r\n            type: Phaser.AUTO,\r\n            backgroundColor: '#fff',\r\n            scene: [snakestart, snakegame]\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { initialize, game } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"phaser\">\r\n                    <Game />\r\n                    <IonPhaser game={game} initialize={initialize} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PhaserGame;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({ component: Component, ...rest}) {\r\n\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    return (\r\n        <Route {...rest} render={ (props) => {\r\n            if (username !== null) {\r\n                return <Component />\r\n            } else {\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: '/',\r\n                        state: { from: props.location\r\n                        }}}\r\n                    />\r\n                )\r\n            }\r\n        }}/>\r\n    )\r\n};\r\n\r\nexport default ProtectedRoute;","import {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport Logout from './pages/Logout';\r\nimport SignUp from './pages/Signup';\r\nimport Records from './pages/Records';\r\nimport Games from './pages/Games';\r\nimport FlappyHolbie from './pages/FlappyHolbie';\r\nimport Snake from './pages/Snake';\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Login} />\r\n          <Route path=\"/SignUp\" component={SignUp} />\r\n          <Route path=\"/Logout\" exact component={Logout} />\r\n          <ProtectedRoute path=\"/Home\" component={Home} />\r\n          <ProtectedRoute path=\"/Records\" component={Records} />\r\n          <ProtectedRoute path=\"/Games\" component={Games} />\r\n          <ProtectedRoute path=\"/Flappy\" component={FlappyHolbie} />\r\n          <ProtectedRoute path=\"/Snake\" component={Snake} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './styles.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}